        -:    0:Source:/home/yeawer/tree/BigInteger.cpp
        -:    0:Graph:/home/yeawer/tree/cmake-build-debug-coverage/CMakeFiles/tree.dir/BigInteger.cpp.gcno
        -:    0:Data:/home/yeawer/tree/cmake-build-debug-coverage/CMakeFiles/tree.dir/BigInteger.cpp.gcda
        -:    0:Runs:1
        -:    1:#include"BigInteger.h"
        -:    2:
function _ZN6bigint9is_bigintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:    3:bool bigint::is_bigint(std::string s) {                              // Checks if the feeded integer is valid Number or not.
    #####:    4:    if(s[0] == '-')
    %%%%%:    4-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:    5:        s.erase(0, 1);
    %%%%%:    5-block  0
call    0 never executed
    #####:    6:    for(unsigned long long int i = 0; i < s.length(); ++i) {
    %%%%%:    6-block  0
    %%%%%:    6-block  1
    %%%%%:    6-block  2
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:    7:        if(!((int)s[i] > 47 && (int)s[i] < 58))
    %%%%%:    7-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:    7-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:    7-block  2
    %%%%%:    7-block  3
    %%%%%:    7-block  4
branch  6 never executed
branch  7 never executed
    #####:    8:            return false;
    %%%%%:    8-block  0
        -:    9:    }
    #####:   10:    return true;
    %%%%%:   10-block  0
        -:   11:}
        -:   12:
        -:   13:
        -:   14://---------------------------------------------------------
        -:   15://--------Internal Arithmetic functions Definitions--------
        -:   16://---------------------------------------------------------
        -:   17:
        -:   18:/*
        -:   19:        ______________________________________________________
        -:   20:                        Addition Function
        -:   21:        ______________________________________________________
        -:   22:                      Algorithm Explanation
        -:   23:
        -:   24:        Simple traversal from right to left in the longest string and adding each character
        -:   25:        from each of both strings as integer and keeping track of carry and storing the result
        -:   26:        into new String(sum). If the numbers are negative in either of the Strings provided
        -:   27:        the respective Subtract function is called.
        -:   28:
        -:   29:        Algorithmic Time Complexity : O(max(n, m))
        -:   30:        Algorithmic Space Complexity : O(max(n, m))
        -:   31:        where n ans m are the lengths of respective strings(Integers) provided.
        -:   32:*/
        -:   33:
function _ZN6bigint3addENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:   34:std::string bigint::add(std::string str1, std::string str2) {          // returns arithmetic addition of str1+str2
    #####:   35:    int str1_len = str1.length();
    %%%%%:   35-block  0
call    0 never executed
    #####:   36:    int str2_len = str2.length();
call    0 never executed
    #####:   37:    std::string sum = "";
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    $$$$$:   37-block  0
        -:   38:
    #####:   39:    if(str1_len == 0 && str2_len == 0) {
branch  0 never executed
branch  1 never executed
    %%%%%:   39-block  0
branch  2 never executed
branch  3 never executed
    #####:   40:        sum = "0";
    %%%%%:   40-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   40-block  1
    #####:   41:    } else if(str1[0] == '-' && str2[0] == '-') {
    %%%%%:   41-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   41-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:   41-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   41-block  3
branch  8 never executed
branch  9 never executed
    %%%%%:   41-block  4
    %%%%%:   41-block  5
    %%%%%:   41-block  6
branch 10 never executed
branch 11 never executed
    #####:   42:        if(str1_len == 1 && str2_len == 1) {
    %%%%%:   42-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   42-block  1
branch  2 never executed
branch  3 never executed
    #####:   43:            sum = "0";
    %%%%%:   43-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   43-block  1
        -:   44:        } else {
    #####:   45:            sum = "-" + add(str1.erase(0, 1), str2.erase(0, 1));
    %%%%%:   45-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   45-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   45-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   45-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   45-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:   45-block  5
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:   45-block  6
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
    $$$$$:   45-block  7
call   23 never executed
    $$$$$:   45-block  8
    $$$$$:   45-block  9
call   24 never executed
    $$$$$:   45-block 10
    $$$$$:   45-block 11
call   25 never executed
    $$$$$:   45-block 12
        -:   46:        }
    #####:   47:    } else if(str1[0] == '-') {
    %%%%%:   47-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   47-block  1
branch  3 never executed
branch  4 never executed
    #####:   48:        sum = subtract(str2, str1.erase(0, 1));
    %%%%%:   48-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   48-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   48-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   48-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   48-block  4
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
    $$$$$:   48-block  5
call   16 never executed
    $$$$$:   48-block  6
    $$$$$:   48-block  7
call   17 never executed
    $$$$$:   48-block  8
    #####:   49:    } else if(str2[0] == '-') {
    %%%%%:   49-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   49-block  1
branch  3 never executed
branch  4 never executed
    #####:   50:        sum = subtract(str1, str2.erase(0, 1));
    %%%%%:   50-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   50-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   50-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   50-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   50-block  4
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
    $$$$$:   50-block  5
call   16 never executed
    $$$$$:   50-block  6
    $$$$$:   50-block  7
call   17 never executed
    $$$$$:   50-block  8
        -:   51:    } else {
    #####:   52:        int i, j, track_sum, carry = 0;
    #####:   53:        for(i = str1_len-1, j = str2_len-1; i >= 0 && j >= 0; --i, --j) {
    %%%%%:   53-block  0
    %%%%%:   53-block  1
branch  0 never executed
branch  1 never executed
    %%%%%:   53-block  2
branch  2 never executed
branch  3 never executed
    #####:   54:            track_sum =  ((int)str1[i])-48 + ((int)str2[j])-48 + carry;
    %%%%%:   54-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   54-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    #####:   55:            carry = track_sum/10;
    #####:   56:            sum = std::to_string(track_sum%10) + sum;
    %%%%%:   56-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   56-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   56-block  2
call    6 never executed
call    7 never executed
call    8 never executed
    $$$$$:   56-block  3
call    9 never executed
    $$$$$:   56-block  4
        -:   57:        }
    #####:   58:        if(i >= 0 && j < 0) {
    %%%%%:   58-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   58-block  1
branch  2 never executed
branch  3 never executed
    #####:   59:            for(; i >= 0; --i) {
    %%%%%:   59-block  0
    %%%%%:   59-block  1
branch  0 never executed
branch  1 never executed
    #####:   60:                track_sum = ((int)str1[i])-48 + carry;
    %%%%%:   60-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   61:                carry = track_sum/10;
    #####:   62:                sum = std::to_string(track_sum%10) + sum;
    %%%%%:   62-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   62-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   62-block  2
call    6 never executed
call    7 never executed
call    8 never executed
    $$$$$:   62-block  3
call    9 never executed
    $$$$$:   62-block  4
        -:   63:            }
    #####:   64:        } else if(j >= 0 && i < 0) {
    %%%%%:   64-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   64-block  1
branch  2 never executed
branch  3 never executed
    #####:   65:            for(; j >= 0; --j) {
    %%%%%:   65-block  0
    %%%%%:   65-block  1
branch  0 never executed
branch  1 never executed
    #####:   66:                track_sum = ((int)str2[j])-48 + carry;
    %%%%%:   66-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   67:                carry = track_sum/10;
    #####:   68:                sum = std::to_string(track_sum%10) + sum;
    %%%%%:   68-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   68-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   68-block  2
call    6 never executed
call    7 never executed
call    8 never executed
    $$$$$:   68-block  3
call    9 never executed
    $$$$$:   68-block  4
        -:   69:            }
        -:   70:        }
    #####:   71:        if(carry) {
    %%%%%:   71-block  0
branch  0 never executed
branch  1 never executed
    #####:   72:            sum = std::to_string(carry) + sum;
    %%%%%:   72-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   72-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   72-block  2
call    6 never executed
call    7 never executed
call    8 never executed
    $$$$$:   72-block  3
call    9 never executed
    $$$$$:   72-block  4
        -:   73:        }
        -:   74:    }
    #####:   75:    return trim(sum);
    %%%%%:   75-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   75-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   75-block  2
call    6 never executed
    %%%%%:   75-block  3
    $$$$$:   75-block  4
call    7 never executed
    $$$$$:   75-block  5
    #####:   76:}
call    0 never executed
    $$$$$:   76-block  0
call    1 never executed
        -:   77:
        -:   78:/*
        -:   79:        ______________________________________________________
        -:   80:                      Subtraction Function
        -:   81:        ______________________________________________________
        -:   82:                      Algorithm Explanation
        -:   83:
        -:   84:        Simple traversal from right to left in the longest string and subtracting each character
        -:   85:        from second string from  first string integer and keeping track of carry and storing the result
        -:   86:        into new String(ans). If the both numbers are negative in the Strings provided the respective
        -:   87:        Addition function is called.
        -:   88:
        -:   89:        Algorithmic Time Complexity : O(max(n, m))
        -:   90:        Algorithmic Space Complexity : O(max(n, m))
        -:   91:        where n ans m are the lengths of respective strings(Integers) provided.
        -:   92:*/
        -:   93:
function _ZN6bigint8subtractENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:   94:std::string bigint::subtract(std::string str1, std::string str2) {                 // returns arithmetic subtraction of str1-str2
    #####:   95:    int str1_len = str1.length();
    %%%%%:   95-block  0
call    0 never executed
    #####:   96:    int str2_len = str2.length();
call    0 never executed
    #####:   97:    std::string sum = "";
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    $$$$$:   97-block  0
    #####:   98:    if(str1 == str2) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   99:        return "0";
    %%%%%:   99-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:   99-block  1
call    4 never executed
    $$$$$:   99-block  2
call    5 never executed
    $$$$$:   99-block  3
    #####:  100:    } else if(str1[0] == '-' && str2[0] == '-') {
    %%%%%:  100-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  100-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  100-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  100-block  3
branch  8 never executed
branch  9 never executed
    %%%%%:  100-block  4
    %%%%%:  100-block  5
    %%%%%:  100-block  6
branch 10 never executed
branch 11 never executed
    #####:  101:        if(str2_len == 1 && str1_len == 1) {
    %%%%%:  101-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  101-block  1
branch  2 never executed
branch  3 never executed
    #####:  102:            sum = "0";
    %%%%%:  102-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  102-block  1
        -:  103:        } else {
    #####:  104:            bigint t1(str1.erase(0, 1));
    %%%%%:  104-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  104-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  104-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    $$$$$:  104-block  3
    #####:  105:            bigint t2(str2.erase(0, 1));
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  105-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  105-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    $$$$$:  105-block  2
    #####:  106:            std::string temp = subtract(t2.str, t1.str);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  106-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  106-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
    $$$$$:  106-block  2
    $$$$$:  106-block  3
    #####:  107:            bigint mx = maximum(t2.str, t1.str);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  107-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  107-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  107-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
call   13 never executed
    $$$$$:  107-block  3
    $$$$$:  107-block  4
    $$$$$:  107-block  5
    #####:  108:            if(temp[0] != '-' && mx.str == t1.str)
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  108-block  0
branch  3 never executed
branch  4 never executed
    %%%%%:  108-block  1
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  108-block  2
    %%%%%:  108-block  3
    %%%%%:  108-block  4
branch  8 never executed
branch  9 never executed
    #####:  109:                sum = "-" + temp;
    %%%%%:  109-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  109-block  1
call    3 never executed
call    4 never executed
        -:  110:            else
    #####:  111:                sum = temp;
    %%%%%:  111-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  112:        }
    %%%%%:  112-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    $$$$$:  112-block  1
call    4 never executed
    $$$$$:  112-block  2
call    5 never executed
    $$$$$:  112-block  3
call    6 never executed
    $$$$$:  112-block  4
call    7 never executed
    #####:  113:    } else if(str1[0] == '-') {
    %%%%%:  113-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  113-block  1
branch  3 never executed
branch  4 never executed
    #####:  114:        sum = "-" + add(str1.erase(0, 1), str2);
    %%%%%:  114-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  114-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  114-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  114-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  114-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:  114-block  5
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
    $$$$$:  114-block  6
call   20 never executed
    $$$$$:  114-block  7
    $$$$$:  114-block  8
call   21 never executed
    $$$$$:  114-block  9
    $$$$$:  114-block 10
call   22 never executed
    $$$$$:  114-block 11
    #####:  115:    } else if(str2[0] == '-') {
    %%%%%:  115-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  115-block  1
branch  3 never executed
branch  4 never executed
    #####:  116:        sum = add(str1, str2.erase(0, 1));
    %%%%%:  116-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  116-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  116-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  116-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  116-block  4
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
    $$$$$:  116-block  5
call   16 never executed
    $$$$$:  116-block  6
    $$$$$:  116-block  7
call   17 never executed
    $$$$$:  116-block  8
        -:  117:    } else {
        -:  118:        //? Implement Subtract
        -:  119:
    #####:  120:        int i, j, track_sum, carry = 0;
    #####:  121:        if(str1_len < str2_len) {
    %%%%%:  121-block  0
branch  0 never executed
branch  1 never executed
    #####:  122:            std::string tp = str1;
    %%%%%:  122-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  123:            str1 = str2;
    %%%%%:  123-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  124:            str2 = tp;
    %%%%%:  124-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  125:            sum = "-" + subtract(str1, str2);
    %%%%%:  125-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  125-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  125-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  125-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  125-block  4
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
    $$$$$:  125-block  5
call   17 never executed
    $$$$$:  125-block  6
    $$$$$:  125-block  7
call   18 never executed
    $$$$$:  125-block  8
    $$$$$:  125-block  9
call   19 never executed
    $$$$$:  125-block 10
    #####:  126:            return trim(sum);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  126-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  126-block  1
call    6 never executed
    $$$$$:  126-block  2
call    7 never executed
    $$$$$:  126-block  3
    #####:  127:        } else if(str1_len == str2_len) {
call    0 never executed
    %%%%%:  127-block  0
branch  1 never executed
branch  2 never executed
    $$$$$:  127-block  1
call    3 never executed
    #####:  128:            bigint a(str1);
    %%%%%:  128-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  128-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:  128-block  2
    #####:  129:            bigint b(str2);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  129-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:  129-block  1
    #####:  130:            bigint mx = maximum(a.str, b.str);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  130-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  130-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  130-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
call   13 never executed
    $$$$$:  130-block  3
    $$$$$:  130-block  4
    $$$$$:  130-block  5
    #####:  131:            if(mx.str == str2) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  132:                std::string tp = str1;
    %%%%%:  132-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  133:                str1 = str2;
    %%%%%:  133-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  134:                str2 = tp;
    %%%%%:  134-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  135:                bigint t1(str1);
    %%%%%:  135-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  135-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:  135-block  2
    #####:  136:                bigint t2(str2);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  136-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:  136-block  1
    #####:  137:                bigint temp = subtract(str1, str2);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  137-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  137-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  137-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
call   13 never executed
    $$$$$:  137-block  3
    $$$$$:  137-block  4
    $$$$$:  137-block  5
    #####:  138:                sum = "-" + subtract(str1, str2);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  138-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  138-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  138-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  138-block  3
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
    $$$$$:  138-block  4
call   17 never executed
    $$$$$:  138-block  5
    $$$$$:  138-block  6
call   18 never executed
    $$$$$:  138-block  7
    $$$$$:  138-block  8
call   19 never executed
    $$$$$:  138-block  9
    #####:  139:                return trim(sum);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  139-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  139-block  1
call    6 never executed
    $$$$$:  139-block  2
call    7 never executed
    $$$$$:  139-block  3
    #####:  140:            }
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
    $$$$$:  140-block  0
call    4 never executed
    $$$$$:  140-block  1
call    5 never executed
    $$$$$:  140-block  2
call    6 never executed
    $$$$$:  140-block  3
call    7 never executed
    #####:  141:        }
    %%%%%:  141-block  0
    %%%%%:  141-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  141-block  2
    %%%%%:  141-block  3
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  141-block  4
    %%%%%:  141-block  5
call    6 never executed
branch  7 never executed
branch  8 never executed
    $$$$$:  141-block  6
call    9 never executed
    $$$$$:  141-block  7
call   10 never executed
    $$$$$:  141-block  8
call   11 never executed
        -:  142:        int val1, val2;
    #####:  143:        for(i = str1_len-1, j = str2_len-1; i >= 0 || j >= 0; --i, --j) {
    %%%%%:  143-block  0
    %%%%%:  143-block  1
branch  0 never executed
branch  1 never executed
    %%%%%:  143-block  2
branch  2 never executed
branch  3 never executed
    #####:  144:            if(i >= 0) {
    %%%%%:  144-block  0
branch  0 never executed
branch  1 never executed
    #####:  145:                val1 = (int) str1[i] - 48;
    %%%%%:  145-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  145-block  1
        -:  146:            } else {
    #####:  147:                val1 = 0;
    %%%%%:  147-block  0
        -:  148:            }
    #####:  149:            if(j >= 0) {
    %%%%%:  149-block  0
branch  0 never executed
branch  1 never executed
    #####:  150:                val2 = (int) str2[j] - 48;
    %%%%%:  150-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  150-block  1
        -:  151:            } else {
    #####:  152:                val2 = 0;
    %%%%%:  152-block  0
        -:  153:            }
    #####:  154:            track_sum = val1 - val2 - carry;
    #####:  155:            if(track_sum < 0) {
    %%%%%:  155-block  0
branch  0 never executed
branch  1 never executed
    #####:  156:                track_sum += 10;
    #####:  157:                carry = 1;
    %%%%%:  157-block  0
        -:  158:            } else {
    #####:  159:                carry = 0;
    %%%%%:  159-block  0
        -:  160:            }
    #####:  161:            sum = std::to_string(track_sum) + sum;
    %%%%%:  161-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  161-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  161-block  2
call    6 never executed
call    7 never executed
call    8 never executed
    $$$$$:  161-block  3
call    9 never executed
    $$$$$:  161-block  4
        -:  162:        }
        -:  163:    }
    #####:  164:    return trim(sum);
    %%%%%:  164-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  164-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  164-block  2
call    6 never executed
    $$$$$:  164-block  3
call    7 never executed
    $$$$$:  164-block  4
    #####:  165:}
    %%%%%:  165-block  0
call    0 never executed
    $$$$$:  165-block  1
call    1 never executed
        -:  166:
        -:  167:/*
        -:  168:        ______________________________________________________
        -:  169:                     Multiplication Function
        -:  170:        ______________________________________________________
        -:  171:                      Algorithm Explanation
        -:  172:
        -:  173:        Like naive way of Multiplication. Traversing from the left of first string and multiplying
        -:  174:        each character as integer to every character of second String as integer and tracking the
        -:  175:        value of carry and adding to the last of each iterations.
        -:  176:
        -:  177:        Algorithmic Time Complexity : O(n*m)
        -:  178:        Algorithmic Space Complexity : O(n + m)
        -:  179:        where n ans m are the lengths of respective strings(Integers) provided.
        -:  180:*/
        -:  181:
function _ZN6bigint8multiplyENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:  182:std::string bigint::multiply(std::string str1, std::string str2) {             // return arithmetic multiplication of str1*str2
    #####:  183:    bool toAddNeg = false;
    #####:  184:    int str1_len = str1.length();
    %%%%%:  184-block  0
call    0 never executed
    #####:  185:    int str2_len = str2.length();
call    0 never executed
    #####:  186:    std::string ans = "";
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    $$$$$:  186-block  0
    #####:  187:    if(str1[0] == '-' && str2[0] == '-') {
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  187-block  0
branch  3 never executed
branch  4 never executed
    %%%%%:  187-block  1
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  187-block  2
branch  8 never executed
branch  9 never executed
    %%%%%:  187-block  3
    %%%%%:  187-block  4
    %%%%%:  187-block  5
branch 10 never executed
branch 11 never executed
    #####:  188:        ans = multiply(str1.erase(0, 1), str2.erase(0, 1));
    %%%%%:  188-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  188-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  188-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  188-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  188-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:  188-block  5
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
    $$$$$:  188-block  6
call   19 never executed
    $$$$$:  188-block  7
    $$$$$:  188-block  8
call   20 never executed
    $$$$$:  188-block  9
    #####:  189:    } else if(str1[0] == '-') {
    %%%%%:  189-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  189-block  1
branch  3 never executed
branch  4 never executed
    #####:  190:        toAddNeg = true;
    #####:  191:        ans = multiply(str1.erase(0, 1), str2);
    %%%%%:  191-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  191-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  191-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  191-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  191-block  4
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
    $$$$$:  191-block  5
call   16 never executed
    $$$$$:  191-block  6
    $$$$$:  191-block  7
call   17 never executed
    $$$$$:  191-block  8
    #####:  192:    } else if(str2[0] == '-') {
    %%%%%:  192-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  192-block  1
branch  3 never executed
branch  4 never executed
    #####:  193:        toAddNeg = true;
    #####:  194:        ans = multiply(str1, str2.erase(0, 1));
    %%%%%:  194-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  194-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  194-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  194-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  194-block  4
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
    $$$$$:  194-block  5
call   16 never executed
    $$$$$:  194-block  6
    $$$$$:  194-block  7
call   17 never executed
    $$$$$:  194-block  8
        -:  195:    } else {
    #####:  196:        if (str1_len == 0 || str2_len == 0)
    %%%%%:  196-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  196-block  1
branch  2 never executed
branch  3 never executed
    #####:  197:            return "0";
    %%%%%:  197-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  197-block  1
call    4 never executed
    $$$$$:  197-block  2
call    5 never executed
    $$$$$:  197-block  3
    #####:  198:        std::vector<int> result(str1_len + str2_len, 0);
    %%%%%:  198-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  198-block  1
call    4 never executed
    $$$$$:  198-block  2
    $$$$$:  198-block  3
    #####:  199:        int i_n1 = 0;
    #####:  200:        int i_n2 = 0;
    #####:  201:        for (int i=str1_len-1; i>=0; i--) {
    %%%%%:  201-block  0
branch  0 never executed
branch  1 never executed
    #####:  202:            int carry = 0;
    #####:  203:            int n1 = str1[i] - '0';
    %%%%%:  203-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  204:            i_n2 = 0;
    #####:  205:            for (int j=str2_len-1; j>=0; j--) {
    %%%%%:  205-block  0
    %%%%%:  205-block  1
branch  0 never executed
branch  1 never executed
    #####:  206:                int n2 = str2[j] - '0';
    %%%%%:  206-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  207:                int sum = n1*n2 + result[i_n1 + i_n2] + carry;
    %%%%%:  207-block  0
call    0 never executed
    #####:  208:                carry = sum/10;
    #####:  209:                result[i_n1 + i_n2] = sum % 10;
call    0 never executed
    #####:  210:                i_n2++;
        -:  211:            }
    #####:  212:            if (carry > 0)
    %%%%%:  212-block  0
branch  0 never executed
branch  1 never executed
    #####:  213:                result[i_n1 + i_n2] += carry;
    %%%%%:  213-block  0
call    0 never executed
    #####:  214:            i_n1++;
    %%%%%:  214-block  0
        -:  215:        }
    #####:  216:        int i = result.size() - 1;
    %%%%%:  216-block  0
call    0 never executed
    #####:  217:        while (i>=0 && result[i] == 0)
    %%%%%:  217-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  217-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  217-block  2
    %%%%%:  217-block  3
    %%%%%:  217-block  4
branch  5 never executed
branch  6 never executed
    #####:  218:            i--;
    %%%%%:  218-block  0
    #####:  219:        if (i == -1)
    %%%%%:  219-block  0
branch  0 never executed
branch  1 never executed
    #####:  220:            return "0";
    %%%%%:  220-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  220-block  1
call    4 never executed
    $$$$$:  220-block  2
call    5 never executed
    $$$$$:  220-block  3
    #####:  221:        while (i >= 0)
    %%%%%:  221-block  0
    %%%%%:  221-block  1
branch  0 never executed
branch  1 never executed
    #####:  222:            ans += std::to_string(result[i--]);
    %%%%%:  222-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  222-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  222-block  2
call    7 never executed
    $$$$$:  222-block  3
call    8 never executed
    $$$$$:  222-block  4
    #####:  223:    }
    %%%%%:  223-block  0
    %%%%%:  223-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  223-block  2
call    3 never executed
    #####:  224:    if(toAddNeg && ans[0]!='0') {
    %%%%%:  224-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:  224-block  1
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  224-block  2
branch  5 never executed
branch  6 never executed
    %%%%%:  224-block  3
    %%%%%:  224-block  4
    %%%%%:  224-block  5
branch  7 never executed
branch  8 never executed
    #####:  225:        ans = '-' + ans;
    %%%%%:  225-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  225-block  1
call    3 never executed
call    4 never executed
        -:  226:    }
    #####:  227:    return ans;
    %%%%%:  227-block  0
call    0 never executed
    #####:  228:}
    %%%%%:  228-block  0
call    0 never executed
    $$$$$:  228-block  1
call    1 never executed
        -:  229:
        -:  230:
        -:  231:/*
        -:  232:        ______________________________________________________
        -:  233:                        Division Function
        -:  234:        ______________________________________________________
        -:  235:                      Algorithm Explanation
        -:  236:
        -:  237:        The divisor increases iteratively till it reaches the Dividend. For fast reaching, a
        -:  238:        pre-determined limit is calculated depending upon the length difference of divisor
        -:  239:        and divident=d, and power of 10 is calculated for length of answer precision. Further simple
        -:  240:        addition is done till it reaches dividend.
        -:  241:
        -:  242:        If the divisior can be strored in primitive type of Int. :
        -:  243:        As the dividend and result can be very large we store them in string. We first take
        -:  244:        digits which are divisible by number. After this take each digit and store result in string.
        -:  245:
        -:  246:        Algorithmic Time Complexity : O(log(val. of divisor))  , if divisor can be stored as primitive type
        -:  247:        Algorithmic Time Complexity : O((10^(len. diff.)) log(val. of divisor))
        -:  248:        Algorithmic Space Complexity : O(log(n-m))
        -:  249:        where n ans m are the lengths of respective strings(Integers) provided.
        -:  250:*/
        -:  251:
function _ZN6bigint6divideENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:  252:std::string bigint::divide(std::string str1, std::string str2) {                   // return arithmetic division of str1/str2
    #####:  253:    std::string ans = "";
    %%%%%:  253-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    $$$$$:  253-block  1
    #####:  254:    if(str2 == "0") {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  255:        return "0";
    %%%%%:  255-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  255-block  1
call    4 never executed
    $$$$$:  255-block  2
call    5 never executed
    $$$$$:  255-block  3
    #####:  256:    } else if(str1 == str2) {
    %%%%%:  256-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  257:        return "1";
    %%%%%:  257-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  257-block  1
call    4 never executed
    $$$$$:  257-block  2
call    5 never executed
    $$$$$:  257-block  3
    #####:  258:    } else if(str1[0] == '-' && str2[0] == '-') {
    %%%%%:  258-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  258-block  1
branch  3 never executed
branch  4 never executed
    %%%%%:  258-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  258-block  3
branch  8 never executed
branch  9 never executed
    %%%%%:  258-block  4
    %%%%%:  258-block  5
    %%%%%:  258-block  6
branch 10 never executed
branch 11 never executed
    #####:  259:        ans = divide(str1.erase(0, 1), str2.erase(0, 1));
    %%%%%:  259-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  259-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  259-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  259-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  259-block  4
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:  259-block  5
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
    $$$$$:  259-block  6
call   19 never executed
    $$$$$:  259-block  7
    $$$$$:  259-block  8
call   20 never executed
    $$$$$:  259-block  9
    #####:  260:    } else if(str1[0] == '-') {
    %%%%%:  260-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  260-block  1
branch  3 never executed
branch  4 never executed
    #####:  261:        std::string temp = divide(str1.erase(0, 1), str2);
    %%%%%:  261-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  261-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  261-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  261-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
    $$$$$:  261-block  4
    $$$$$:  261-block  5
    #####:  262:        if(temp == "0")
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  263:            ans = temp;
    %%%%%:  263-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  264:        else
    #####:  265:            ans = '-' + temp;
    %%%%%:  265-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  265-block  1
call    3 never executed
call    4 never executed
    #####:  266:    } else if(str2[0] == '-') {
    %%%%%:  266-block  0
call    0 never executed
    %%%%%:  266-block  1
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  266-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  266-block  3
call    6 never executed
    #####:  267:        std::string temp = divide(str1, str2.erase(0, 1));
    %%%%%:  267-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  267-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  267-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  267-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
    $$$$$:  267-block  4
    $$$$$:  267-block  5
    #####:  268:        if(temp == "0")
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  269:            ans = temp;
    %%%%%:  269-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  270:        else
    #####:  271:            ans = '-' + temp;
    %%%%%:  271-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  271-block  1
call    3 never executed
call    4 never executed
    #####:  272:    } else {
    %%%%%:  272-block  0
call    0 never executed
    $$$$$:  272-block  1
call    1 never executed
    #####:  273:        if(str2 == "1")
    %%%%%:  273-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  274:            return str1;
    %%%%%:  274-block  0
call    0 never executed
    #####:  275:        if(is_strictlyMaximum(str2, str1)) {
    %%%%%:  275-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  275-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  275-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  275-block  3
call    9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
    $$$$$:  275-block  4
call   13 never executed
    $$$$$:  275-block  5
    $$$$$:  275-block  6
call   14 never executed
    $$$$$:  275-block  7
    #####:  276:            return "0";
    %%%%%:  276-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  276-block  1
call    4 never executed
    $$$$$:  276-block  2
call    5 never executed
    $$$$$:  276-block  3
        -:  277:        }
    #####:  278:        if(str2.length() <= 19) {
    %%%%%:  278-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  279:            std::stringstream strstrm(str2);
    %%%%%:  279-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  280:            unsigned long long int int_str2 = 0;
    #####:  281:            strstrm >> int_str2;
    %%%%%:  281-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  282:            ans = shortDivide(str1, int_str2);
    %%%%%:  282-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  282-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  282-block  2
call    6 never executed
call    7 never executed
call    8 never executed
    $$$$$:  282-block  3
call    9 never executed
    $$$$$:  282-block  4
    #####:  283:        }
call    0 never executed
    $$$$$:  283-block  0
call    1 never executed
        -:  284:        else {
    #####:  285:            std::string temp = str2;
    %%%%%:  285-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  286:            ans = "0";
    %%%%%:  286-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  287:            std::string count = "0";
    %%%%%:  287-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    $$$$$:  287-block  1
    #####:  288:            while(str1 == maximum(str1, str2)) {
    %%%%%:  288-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  288-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  288-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  288-block  3
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
    $$$$$:  288-block  4
call   15 never executed
    $$$$$:  288-block  5
    $$$$$:  288-block  6
call   16 never executed
    $$$$$:  288-block  7
    #####:  289:                int lenDiff = str1.length() - str2.length();
    %%%%%:  289-block  0
call    0 never executed
call    1 never executed
    #####:  290:                if(lenDiff > 0 && str1[0] > str2[0]) {
branch  0 never executed
branch  1 never executed
    %%%%%:  290-block  0
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  290-block  1
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  290-block  2
branch  8 never executed
branch  9 never executed
    %%%%%:  290-block  3
    %%%%%:  290-block  4
    %%%%%:  290-block  5
branch 10 never executed
branch 11 never executed
    #####:  291:                    count = add(count, pow("10", std::to_string(lenDiff)));
    %%%%%:  291-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  291-block  1
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  291-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  291-block  3
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  291-block  4
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:  291-block  5
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
    $$$$$:  291-block  6
call   23 never executed
    $$$$$:  291-block  7
    $$$$$:  291-block  8
call   24 never executed
    $$$$$:  291-block  9
    $$$$$:  291-block 10
call   25 never executed
    $$$$$:  291-block 11
    $$$$$:  291-block 12
call   26 never executed
    $$$$$:  291-block 13
    $$$$$:  291-block 14
call   27 never executed
    $$$$$:  291-block 15
    #####:  292:                    str1 = subtract(str1, multiply(str2, pow("10", std::to_string(lenDiff))));
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  292-block  0
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  292-block  1
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  292-block  2
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  292-block  3
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:  292-block  4
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:  292-block  5
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:  292-block  6
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
    $$$$$:  292-block  7
call   31 never executed
    $$$$$:  292-block  8
    $$$$$:  292-block  9
call   32 never executed
    $$$$$:  292-block 10
    $$$$$:  292-block 11
call   33 never executed
    $$$$$:  292-block 12
    $$$$$:  292-block 13
call   34 never executed
    $$$$$:  292-block 14
    $$$$$:  292-block 15
call   35 never executed
    $$$$$:  292-block 16
    $$$$$:  292-block 17
call   36 never executed
    $$$$$:  292-block 18
    $$$$$:  292-block 19
call   37 never executed
    $$$$$:  292-block 20
    #####:  293:                } else if(lenDiff > 0) {
    %%%%%:  293-block  0
branch  0 never executed
branch  1 never executed
    #####:  294:                    count = add(count, pow("10", std::to_string(lenDiff-1)));
    %%%%%:  294-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  294-block  1
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  294-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  294-block  3
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  294-block  4
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:  294-block  5
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
    $$$$$:  294-block  6
call   23 never executed
    $$$$$:  294-block  7
    $$$$$:  294-block  8
call   24 never executed
    $$$$$:  294-block  9
    $$$$$:  294-block 10
call   25 never executed
    $$$$$:  294-block 11
    $$$$$:  294-block 12
call   26 never executed
    $$$$$:  294-block 13
    $$$$$:  294-block 14
call   27 never executed
    $$$$$:  294-block 15
    #####:  295:                    str1 = subtract(str1, multiply(str2, pow("10", std::to_string(lenDiff-1))));
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  295-block  0
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  295-block  1
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  295-block  2
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  295-block  3
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:  295-block  4
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:  295-block  5
call   19 never executed
branch 20 never executed
branch 21 never executed
    %%%%%:  295-block  6
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
    $$$$$:  295-block  7
call   31 never executed
    $$$$$:  295-block  8
    $$$$$:  295-block  9
call   32 never executed
    $$$$$:  295-block 10
    $$$$$:  295-block 11
call   33 never executed
    $$$$$:  295-block 12
    $$$$$:  295-block 13
call   34 never executed
    $$$$$:  295-block 14
    $$$$$:  295-block 15
call   35 never executed
    $$$$$:  295-block 16
    $$$$$:  295-block 17
call   36 never executed
    $$$$$:  295-block 18
    $$$$$:  295-block 19
call   37 never executed
    $$$$$:  295-block 20
        -:  296:                } else {
    #####:  297:                    count = add(count, "1");
    %%%%%:  297-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  297-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  297-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  297-block  3
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
    $$$$$:  297-block  4
call   15 never executed
    $$$$$:  297-block  5
    $$$$$:  297-block  6
call   16 never executed
    $$$$$:  297-block  7
    $$$$$:  297-block  8
call   17 never executed
    $$$$$:  297-block  9
    #####:  298:                    str1 = subtract(str1, str2);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  298-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  298-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  298-block  2
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
    $$$$$:  298-block  3
call   13 never executed
    $$$$$:  298-block  4
    $$$$$:  298-block  5
call   14 never executed
    $$$$$:  298-block  6
        -:  299:                }
        -:  300:            }
    #####:  301:            ans = count;
    %%%%%:  301-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  302:        }
    %%%%%:  302-block  0
call    0 never executed
call    1 never executed
    $$$$$:  302-block  1
call    2 never executed
    $$$$$:  302-block  2
call    3 never executed
        -:  303:    }
    #####:  304:    return ans;
    %%%%%:  304-block  0
call    0 never executed
    #####:  305:}
    %%%%%:  305-block  0
call    0 never executed
    $$$$$:  305-block  1
call    1 never executed
        -:  306:
function _ZN6bigint11shortDivideENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEy called 0 returned 0% blocks executed 0%
    #####:  307:std::string bigint::shortDivide(std::string s1, unsigned long long int divisor) {     // return arithmetic division of str1/str2
    #####:  308:    std::string ans;
    %%%%%:  308-block  0
call    0 never executed
    #####:  309:    int idx = 0;
    #####:  310:    long long int temp = s1[idx] - '0';
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  311:
    #####:  312:    while (temp < divisor) {
    %%%%%:  312-block  0
    %%%%%:  312-block  1
branch  0 never executed
branch  1 never executed
    #####:  313:        temp = temp*10 + (s1[++idx] - '0');
    %%%%%:  313-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  314:        if(idx >= s1.length())
    %%%%%:  314-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  315:            break;
    %%%%%:  315-block  0
        -:  316:    }
    #####:  317:    while (s1.length() > idx) {
    %%%%%:  317-block  0
    %%%%%:  317-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  318:        ans += (temp / divisor) + '0';
    %%%%%:  318-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  319:        temp = (temp % divisor)*10 + s1[++idx] - '0';
    %%%%%:  319-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  319-block  1
        -:  320:    }
        -:  321:
    #####:  322:    if (ans.length() == 0)
    %%%%%:  322-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  323:        return "0";
    %%%%%:  323-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  323-block  1
call    4 never executed
    $$$$$:  323-block  2
call    5 never executed
    $$$$$:  323-block  3
        -:  324:
    #####:  325:    return ans;
    %%%%%:  325-block  0
call    0 never executed
    #####:  326:}
    %%%%%:  326-block  0
call    0 never executed
    $$$$$:  326-block  1
call    1 never executed
        -:  327:
function _ZN6bigint3modENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:  328:std::string bigint::mod(std::string str1, std::string str2) {                  // return arithmetic modulos of str1%str2
    #####:  329:    std::string ans = subtract(str1, multiply(divide(str1, str2), str2));
    %%%%%:  329-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  329-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  329-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  329-block  3
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  329-block  4
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:  329-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
    $$$$$:  329-block  6
    $$$$$:  329-block  7
    $$$$$:  329-block  8
    $$$$$:  329-block  9
    $$$$$:  329-block 10
    #####:  330:    return ans;
    %%%%%:  330-block  0
        -:  331:}
        -:  332:
        -:  333:
function _ZN6bigint7maximumENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:  334:std::string bigint::maximum(std::string str1, std::string str2) {              // return maximum of both strings.
    #####:  335:    std::string max = "";
    %%%%%:  335-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    $$$$$:  335-block  1
    #####:  336:    bool bothNeg = false;
    #####:  337:    bool isMax1 = false;
    #####:  338:    bool isMax2 = false;
    #####:  339:    if(str1[0] == '-' && str2[0] == '-') {
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  339-block  0
branch  3 never executed
branch  4 never executed
    %%%%%:  339-block  1
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  339-block  2
branch  8 never executed
branch  9 never executed
    %%%%%:  339-block  3
    %%%%%:  339-block  4
    %%%%%:  339-block  5
branch 10 never executed
branch 11 never executed
    #####:  340:        bothNeg = true;
    #####:  341:        str1.erase(0, 1);
    %%%%%:  341-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  342:        str2.erase(0, 1);
    %%%%%:  342-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  343:    } else if(str1[0] == '-') {
    %%%%%:  343-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  343-block  1
branch  3 never executed
branch  4 never executed
    #####:  344:        return trim(str2);
    %%%%%:  344-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  344-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  344-block  2
call    6 never executed
    $$$$$:  344-block  3
call    7 never executed
    $$$$$:  344-block  4
    #####:  345:    } else if(str2[0] == '-') {
    %%%%%:  345-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  345-block  1
branch  3 never executed
branch  4 never executed
    #####:  346:        return trim(str1);
    %%%%%:  346-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  346-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  346-block  2
call    6 never executed
    $$$$$:  346-block  3
call    7 never executed
    $$$$$:  346-block  4
        -:  347:    }
    #####:  348:    int str1_len = str1.length(), str2_len = str2.length();
    %%%%%:  348-block  0
call    0 never executed
call    1 never executed
    #####:  349:    if(str1_len == str2_len) {
branch  0 never executed
branch  1 never executed
    #####:  350:        for(int i = 0; i < str1_len; ++i) {
    %%%%%:  350-block  0
    %%%%%:  350-block  1
    %%%%%:  350-block  2
branch  0 never executed
branch  1 never executed
    #####:  351:            if(str1[i] != str2[i]) {
    %%%%%:  351-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  351-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  351-block  2
branch  6 never executed
branch  7 never executed
    #####:  352:                if(str1[i] > str2[i]) {
    %%%%%:  352-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  352-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  352-block  2
branch  6 never executed
branch  7 never executed
    #####:  353:                    isMax1 = true;
    %%%%%:  353-block  0
        -:  354:                } else {
    #####:  355:                    isMax2 = true;
    %%%%%:  355-block  0
        -:  356:                }
    #####:  357:                break;
    %%%%%:  357-block  0
        -:  358:            }
        -:  359:        }
    #####:  360:        if(!(isMax2 ^ isMax1)) {
    %%%%%:  360-block  0
branch  0 never executed
branch  1 never executed
    #####:  361:            isMax1 = true;
    %%%%%:  361-block  0
        -:  362:        }
    #####:  363:    } else if(str1_len > str2_len) {
    %%%%%:  363-block  0
branch  0 never executed
branch  1 never executed
    #####:  364:        isMax1 = true;
    %%%%%:  364-block  0
        -:  365:    } else {
    #####:  366:        isMax2 = true;
    %%%%%:  366-block  0
        -:  367:    }
    #####:  368:    if(bothNeg) {
    %%%%%:  368-block  0
branch  0 never executed
branch  1 never executed
    #####:  369:        if(isMax1)
    %%%%%:  369-block  0
branch  0 never executed
branch  1 never executed
    #####:  370:            return ("-" + trim(str2));
    %%%%%:  370-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  370-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  370-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  370-block  3
call    9 never executed
call   10 never executed
    $$$$$:  370-block  4
call   11 never executed
    $$$$$:  370-block  5
    $$$$$:  370-block  6
call   12 never executed
    $$$$$:  370-block  7
        -:  371:        else
    #####:  372:            return ("-" + trim(str1));
    %%%%%:  372-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  372-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  372-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  372-block  3
call    9 never executed
call   10 never executed
    $$$$$:  372-block  4
call   11 never executed
    $$$$$:  372-block  5
    $$$$$:  372-block  6
call   12 never executed
    $$$$$:  372-block  7
        -:  373:    } else {
    #####:  374:        if(isMax1)
    %%%%%:  374-block  0
branch  0 never executed
branch  1 never executed
    #####:  375:            return trim(str1);
    %%%%%:  375-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  375-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  375-block  2
call    6 never executed
    $$$$$:  375-block  3
call    7 never executed
    $$$$$:  375-block  4
        -:  376:        else
    #####:  377:            return trim(str2);
    %%%%%:  377-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  377-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  377-block  2
call    6 never executed
    $$$$$:  377-block  3
call    7 never executed
    $$$$$:  377-block  4
        -:  378:    }
    #####:  379:}
    %%%%%:  379-block  0
call    0 never executed
    $$$$$:  379-block  1
call    1 never executed
        -:  380:
function _ZN6bigint7minimumENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:  381:std::string bigint::minimum(std::string str1, std::string str2) {              // return minimum of both strings.
    #####:  382:    std::string ans = maximum(str1, str2);
    %%%%%:  382-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  382-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  382-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
    $$$$$:  382-block  3
    $$$$$:  382-block  4
    #####:  383:    if(ans == str1)
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  384:        return str2;
    %%%%%:  384-block  0
call    0 never executed
    #####:  385:    return str1;
    %%%%%:  385-block  0
call    0 never executed
    #####:  386:}
    %%%%%:  386-block  0
call    0 never executed
        -:  387:
function _ZN6bigint10is_maximumENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:  388:bool bigint::is_maximum(std::string str1, std::string str2) {             //checks if str1 >= str2, numerically
    #####:  389:    if(str1 == maximum(str1, str2))
    %%%%%:  389-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  389-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  389-block  2
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
    $$$$$:  389-block  3
call   13 never executed
    $$$$$:  389-block  4
    $$$$$:  389-block  5
call   14 never executed
    #####:  390:        return true;
    %%%%%:  390-block  0
    #####:  391:    return false;
    %%%%%:  391-block  0
        -:  392:}
        -:  393:
function _ZN6bigint10is_minimumENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:  394:bool bigint::is_minimum(std::string str1, std::string str2) {             //checks if str1 <= str2, numerically
    #####:  395:    if(str2 == maximum(str1, str2))
    %%%%%:  395-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  395-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  395-block  2
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
    $$$$$:  395-block  3
call   13 never executed
    $$$$$:  395-block  4
    $$$$$:  395-block  5
call   14 never executed
    #####:  396:        return true;
    %%%%%:  396-block  0
    #####:  397:    return false;
    %%%%%:  397-block  0
        -:  398:}
        -:  399:
function _ZN6bigint18is_strictlyMaximumENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:  400:bool bigint::is_strictlyMaximum(std::string str1, std::string str2) {    //checks if str1 > str2, numerically
    #####:  401:    if(str1 == str2)
    %%%%%:  401-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  402:        return false;
    %%%%%:  402-block  0
    #####:  403:    if(str1 == maximum(str1, str2))
    %%%%%:  403-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  403-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  403-block  2
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
    $$$$$:  403-block  3
call   13 never executed
    $$$$$:  403-block  4
    $$$$$:  403-block  5
call   14 never executed
    #####:  404:        return true;
    %%%%%:  404-block  0
    #####:  405:    return false;
    %%%%%:  405-block  0
        -:  406:}
        -:  407:
function _ZN6bigint18is_strictlyMinimumENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:  408:bool bigint::is_strictlyMinimum(std::string str1, std::string str2) {    //checks if str1 < str2, numerically
    #####:  409:    if(str1 == str2)
    %%%%%:  409-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  410:        return false;
    %%%%%:  410-block  0
    #####:  411:    if(str2 == maximum(str1, str2))
    %%%%%:  411-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  411-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  411-block  2
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
    $$$$$:  411-block  3
call   13 never executed
    $$$$$:  411-block  4
    $$$$$:  411-block  5
call   14 never executed
    #####:  412:        return true;
    %%%%%:  412-block  0
    #####:  413:    return false;
    %%%%%:  413-block  0
        -:  414:}
        -:  415:
function _ZN6bigint4trimENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  416:std::string bigint::trim(std::string s) {                         // function to remove zeros
    #####:  417:    if(s == "0")
    %%%%%:  417-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  418:        return s;
    %%%%%:  418-block  0
call    0 never executed
    #####:  419:    if(s[0] == '-') {
    %%%%%:  419-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  420:        int i = 1;
    #####:  421:        while(s[i] == '0') {
    %%%%%:  421-block  0
    %%%%%:  421-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  422:            s.erase(i, 1);
    %%%%%:  422-block  0
call    0 never executed
        -:  423:        }
    #####:  424:        return s;
    %%%%%:  424-block  0
call    0 never executed
    #####:  425:    } else if(s[0] == '0') {
    %%%%%:  425-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  426:        int i = 0;
    #####:  427:        while(s[i] == '0') {
    %%%%%:  427-block  0
    %%%%%:  427-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  428:            s.erase(i, 1);
    %%%%%:  428-block  0
call    0 never executed
        -:  429:        }
    #####:  430:        return s;
    %%%%%:  430-block  0
call    0 never executed
        -:  431:    }
    #####:  432:    return s;
    %%%%%:  432-block  0
call    0 never executed
        -:  433:}
        -:  434:
        -:  435:
        -:  436://____________________________________________________________________________________________
        -:  437:
        -:  438:
        -:  439:
function _ZN6bigint3absENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  440:std::string bigint::abs(std::string s) {                          // returns absolute value of string
    #####:  441:    if(s[0] == '-')
    %%%%%:  441-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  442:        s.erase(0, 1);
    %%%%%:  442-block  0
call    0 never executed
    #####:  443:    return s;
    %%%%%:  443-block  0
call    0 never executed
        -:  444:}
        -:  445:
        -:  446:
        -:  447:/*
        -:  448:        ______________________________________________________
        -:  449:                        Power Function
        -:  450:        ______________________________________________________
        -:  451:                      Algorithm Explanation
        -:  452:
        -:  453:        It multiplies str1, str2 times and updates the str1 value
        -:  454:
        -:  455:        Algorithmic Time Complexity : O(m), except multiplication time complexity
        -:  456:        Algorithmic Space Complexity : O(1)
        -:  457:        where n ans m are the lengths of respective strings(Integers) provided.
        -:  458:*/
        -:  459:
function _ZN6bigint3powENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:  460:std::string bigint::pow(std::string str1, std::string str2) {                  // returns str1^str2, ^ -> power, numerically
    #####:  461:    if(str2 == "0") {
    %%%%%:  461-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  462:        return "1";
    %%%%%:  462-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  462-block  1
call    4 never executed
    $$$$$:  462-block  2
call    5 never executed
    $$$$$:  462-block  3
call    6 never executed
    #####:  463:    } else if(str1 == "0") {
    %%%%%:  463-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  464:        if(str2[0] == '-')
    %%%%%:  464-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  465:            return std::to_string((long long int)std::pow(0, -5));
    %%%%%:  465-block  0
call    0 never executed
call    1 never executed
    #####:  466:        return "0";
    %%%%%:  466-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  466-block  1
call    4 never executed
    $$$$$:  466-block  2
call    5 never executed
    $$$$$:  466-block  3
call    6 never executed
    #####:  467:    } else if(str1[0] == '-' && str2[0] == '-') {
    %%%%%:  467-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  467-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  467-block  2
    %%%%%:  467-block  3
    %%%%%:  467-block  4
branch  6 never executed
branch  7 never executed
    #####:  468:        if(str1 == "-1" && str2 == "-1") {
    %%%%%:  468-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  468-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  468-block  2
    %%%%%:  468-block  3
    %%%%%:  468-block  4
branch  6 never executed
branch  7 never executed
    #####:  469:            return "-1";
    %%%%%:  469-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  469-block  1
call    4 never executed
    $$$$$:  469-block  2
call    5 never executed
    $$$$$:  469-block  3
call    6 never executed
    #####:  470:        } else if(str1 == "-1") {
    %%%%%:  470-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  471:            if((((int)str2[str2.length()-1])-48) & 1) {
    %%%%%:  471-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  472:                return "-1";
    %%%%%:  472-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  472-block  1
call    4 never executed
    $$$$$:  472-block  2
call    5 never executed
    $$$$$:  472-block  3
call    6 never executed
        -:  473:            } else {
    #####:  474:                return "1";
    %%%%%:  474-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  474-block  1
call    4 never executed
    $$$$$:  474-block  2
call    5 never executed
    $$$$$:  474-block  3
call    6 never executed
        -:  475:            }
        -:  476:        } else {
    #####:  477:            return "0";
    %%%%%:  477-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  477-block  1
call    4 never executed
    $$$$$:  477-block  2
call    5 never executed
    $$$$$:  477-block  3
call    6 never executed
        -:  478:        }
    #####:  479:    } else if(str1[0] == '-') {
    %%%%%:  479-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  480:        if((((int)str2[str2.length()-1])-48) & 1)
    %%%%%:  480-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  481:            return '-' + pow(str1.erase(0, 1), str2);
    %%%%%:  481-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  481-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  481-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  481-block  3
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  481-block  4
call   13 never executed
call   14 never executed
call   15 never executed
    $$$$$:  481-block  5
call   16 never executed
    $$$$$:  481-block  6
    $$$$$:  481-block  7
call   17 never executed
    $$$$$:  481-block  8
    $$$$$:  481-block  9
call   18 never executed
    $$$$$:  481-block 10
call   19 never executed
    #####:  482:        return pow(str1.erase(0, 1), str2);
    %%%%%:  482-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  482-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  482-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  482-block  3
call   10 never executed
call   11 never executed
    $$$$$:  482-block  4
call   12 never executed
    $$$$$:  482-block  5
    $$$$$:  482-block  6
call   13 never executed
    $$$$$:  482-block  7
call   14 never executed
    #####:  483:    } else if(str2[0] == '-') {
    %%%%%:  483-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  484:        if(str1 == "1") {
    %%%%%:  484-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  485:            return str1;
    %%%%%:  485-block  0
call    0 never executed
        -:  486:        } else {
    #####:  487:            return "0";
    %%%%%:  487-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  487-block  1
call    4 never executed
    $$$$$:  487-block  2
call    5 never executed
    $$$$$:  487-block  3
call    6 never executed
        -:  488:        }
        -:  489:    } else {
    #####:  490:        std::string init_str1 = str1;
    %%%%%:  490-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  491:        while(str2 != "1") {
    %%%%%:  491-block  0
    %%%%%:  491-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  492:            str1 = multiply(str1, init_str1);
    %%%%%:  492-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  492-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  492-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  492-block  3
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
    $$$$$:  492-block  4
call   13 never executed
    $$$$$:  492-block  5
    $$$$$:  492-block  6
call   14 never executed
    $$$$$:  492-block  7
    #####:  493:            str2 = subtract(str2, "1");
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  493-block  0
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  493-block  1
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  493-block  2
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
    $$$$$:  493-block  3
call   15 never executed
    $$$$$:  493-block  4
    $$$$$:  493-block  5
call   16 never executed
    $$$$$:  493-block  6
    $$$$$:  493-block  7
call   17 never executed
    $$$$$:  493-block  8
        -:  494:        }
    #####:  495:        return str1;
    %%%%%:  495-block  0
call    0 never executed
    #####:  496:    }
call    0 never executed
    $$$$$:  496-block  0
call    1 never executed
        -:  497:}
        -:  498:
        -:  499:/*
        -:  500:        ______________________________________________________
        -:  501:                        Sqrt Function
        -:  502:        ______________________________________________________
        -:  503:                      Algorithm Explanation
        -:  504:
        -:  505:        Since sqrt of a string(s) has length floor(s/2), if s's length is even and
        -:  506:        ceil(s/2) if s's length is odd.
        -:  507:        So it performs binary Search in that answer's range.
        -:  508:
        -:  509:        Algorithmic Time Complexity : O(log(val. of s)), except divide time complexity
        -:  510:        Algorithmic Space Complexity : O(s/2);
        -:  511:*/
        -:  512:
function _ZN6bigint4sqrtENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  513:std::string bigint::sqrt(std::string s) {                 // returns sqrt(s), numerically
    #####:  514:    if(s[0] == '-')
    %%%%%:  514-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  514-block  1
branch  3 never executed
branch  4 never executed
    #####:  515:        return s;
    %%%%%:  515-block  0
call    0 never executed
    #####:  516:    if(s == "0")
    %%%%%:  516-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  517:        return "0";
    %%%%%:  517-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  517-block  1
call    4 never executed
    $$$$$:  517-block  2
call    5 never executed
    $$$$$:  517-block  3
    #####:  518:    unsigned long long int s_len = s.length();
    %%%%%:  518-block  0
call    0 never executed
    #####:  519:    std::string ans;
call    0 never executed
    #####:  520:    std::string mid = "";
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    $$$$$:  520-block  0
    #####:  521:    std::string high, low, square;
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  522:    unsigned long long int ans_len = s_len >> 1;
    #####:  523:    if(s_len & 1) {
branch  0 never executed
branch  1 never executed
    #####:  524:        low = pow("10", std::to_string(ans_len));
    %%%%%:  524-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  524-block  1
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  524-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  524-block  3
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
    $$$$$:  524-block  4
call   15 never executed
    $$$$$:  524-block  5
    $$$$$:  524-block  6
call   16 never executed
    $$$$$:  524-block  7
    $$$$$:  524-block  8
call   17 never executed
    $$$$$:  524-block  9
    #####:  525:        high = pow("10", std::to_string(ans_len+1));
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  525-block  0
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  525-block  1
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  525-block  2
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
    $$$$$:  525-block  3
call   15 never executed
    $$$$$:  525-block  4
    $$$$$:  525-block  5
call   16 never executed
    $$$$$:  525-block  6
    $$$$$:  525-block  7
call   17 never executed
    $$$$$:  525-block  8
        -:  526:    } else {
    #####:  527:        low = pow("10", std::to_string(ans_len-1));
    %%%%%:  527-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  527-block  1
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  527-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  527-block  3
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
    $$$$$:  527-block  4
call   15 never executed
    $$$$$:  527-block  5
    $$$$$:  527-block  6
call   16 never executed
    $$$$$:  527-block  7
    $$$$$:  527-block  8
call   17 never executed
    $$$$$:  527-block  9
    #####:  528:        high = pow("10", std::to_string(ans_len));
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  528-block  0
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  528-block  1
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  528-block  2
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
    $$$$$:  528-block  3
call   15 never executed
    $$$$$:  528-block  4
    $$$$$:  528-block  5
call   16 never executed
    $$$$$:  528-block  6
    $$$$$:  528-block  7
call   17 never executed
    $$$$$:  528-block  8
        -:  529:    }
    #####:  530:    std::string prev;
    %%%%%:  530-block  0
call    0 never executed
        -:  531:    while(1) {
    #####:  532:        mid = divide(add(high, low), "2");
    %%%%%:  532-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  532-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  532-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  532-block  3
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  532-block  4
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:  532-block  5
call   16 never executed
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
    %%%%%:  532-block  6
    $$$$$:  532-block  7
call   23 never executed
    $$$$$:  532-block  8
    $$$$$:  532-block  9
call   24 never executed
    $$$$$:  532-block 10
    $$$$$:  532-block 11
call   25 never executed
    $$$$$:  532-block 12
    $$$$$:  532-block 13
call   26 never executed
    $$$$$:  532-block 14
    $$$$$:  532-block 15
call   27 never executed
    $$$$$:  532-block 16
    #####:  533:        square = multiply(mid, mid);
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  533-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  533-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  533-block  2
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
    $$$$$:  533-block  3
call   13 never executed
    $$$$$:  533-block  4
    $$$$$:  533-block  5
call   14 never executed
    $$$$$:  533-block  6
    #####:  534:        if(prev == mid || (maximum(add(square, mid), s) == add(square, mid) && maximum(square, s) == s ) || high == low) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  534-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  534-block  1
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  534-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:  534-block  3
call   12 never executed
branch 13 never executed
branch 14 never executed
    %%%%%:  534-block  4
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:  534-block  5
call   18 never executed
branch 19 never executed
branch 20 never executed
    %%%%%:  534-block  6
call   21 never executed
branch 22 never executed
branch 23 never executed
    %%%%%:  534-block  7
call   24 never executed
branch 25 never executed
branch 26 never executed
    %%%%%:  534-block  8
call   27 never executed
branch 28 never executed
branch 29 never executed
    %%%%%:  534-block  9
call   30 never executed
branch 31 never executed
branch 32 never executed
    %%%%%:  534-block 10
call   33 never executed
branch 34 never executed
branch 35 never executed
    %%%%%:  534-block 11
call   36 never executed
branch 37 never executed
branch 38 never executed
    %%%%%:  534-block 12
call   39 never executed
branch 40 never executed
branch 41 never executed
    %%%%%:  534-block 13
call   42 never executed
branch 43 never executed
branch 44 never executed
    %%%%%:  534-block 14
    %%%%%:  534-block 15
    %%%%%:  534-block 16
branch 45 never executed
branch 46 never executed
    %%%%%:  534-block 17
call   47 never executed
    %%%%%:  534-block 18
branch 48 never executed
branch 49 never executed
    %%%%%:  534-block 19
call   50 never executed
    %%%%%:  534-block 20
branch 51 never executed
branch 52 never executed
    %%%%%:  534-block 21
call   53 never executed
    %%%%%:  534-block 22
branch 54 never executed
branch 55 never executed
    %%%%%:  534-block 23
call   56 never executed
    %%%%%:  534-block 24
branch 57 never executed
branch 58 never executed
    %%%%%:  534-block 25
call   59 never executed
    %%%%%:  534-block 26
branch 60 never executed
branch 61 never executed
    %%%%%:  534-block 27
call   62 never executed
    %%%%%:  534-block 28
branch 63 never executed
branch 64 never executed
    %%%%%:  534-block 29
call   65 never executed
    %%%%%:  534-block 30
branch 66 never executed
branch 67 never executed
    %%%%%:  534-block 31
call   68 never executed
    %%%%%:  534-block 32
branch 69 never executed
branch 70 never executed
    %%%%%:  534-block 33
call   71 never executed
    %%%%%:  534-block 34
branch 72 never executed
branch 73 never executed
    %%%%%:  534-block 35
call   74 never executed
    %%%%%:  534-block 36
branch 75 never executed
branch 76 never executed
    %%%%%:  534-block 37
call   77 never executed
    %%%%%:  534-block 38
branch 78 never executed
branch 79 never executed
    $$$$$:  534-block 39
branch 80 never executed
branch 81 never executed
    $$$$$:  534-block 40
call   82 never executed
    $$$$$:  534-block 41
    $$$$$:  534-block 42
branch 83 never executed
branch 84 never executed
    $$$$$:  534-block 43
call   85 never executed
    $$$$$:  534-block 44
    $$$$$:  534-block 45
branch 86 never executed
branch 87 never executed
    $$$$$:  534-block 46
call   88 never executed
    $$$$$:  534-block 47
    $$$$$:  534-block 48
branch 89 never executed
branch 90 never executed
    $$$$$:  534-block 49
call   91 never executed
    $$$$$:  534-block 50
    $$$$$:  534-block 51
branch 92 never executed
branch 93 never executed
    $$$$$:  534-block 52
call   94 never executed
    $$$$$:  534-block 53
    $$$$$:  534-block 54
branch 95 never executed
branch 96 never executed
    $$$$$:  534-block 55
call   97 never executed
    $$$$$:  534-block 56
    $$$$$:  534-block 57
branch 98 never executed
branch 99 never executed
    $$$$$:  534-block 58
call   100 never executed
    $$$$$:  534-block 59
    $$$$$:  534-block 60
branch 101 never executed
branch 102 never executed
    $$$$$:  534-block 61
call   103 never executed
    $$$$$:  534-block 62
    $$$$$:  534-block 63
branch 104 never executed
branch 105 never executed
    $$$$$:  534-block 64
call   106 never executed
    $$$$$:  534-block 65
    $$$$$:  534-block 66
branch 107 never executed
branch 108 never executed
    $$$$$:  534-block 67
call   109 never executed
    $$$$$:  534-block 68
    $$$$$:  534-block 69
branch 110 never executed
branch 111 never executed
    $$$$$:  534-block 70
call   112 never executed
    $$$$$:  534-block 71
    #####:  535:            break;
    %%%%%:  535-block  0
        -:  536:        }
    #####:  537:        if(maximum(square, s) == s) {
    %%%%%:  537-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  537-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  537-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  537-block  3
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
    $$$$$:  537-block  4
call   15 never executed
    $$$$$:  537-block  5
    $$$$$:  537-block  6
call   16 never executed
    $$$$$:  537-block  7
    #####:  538:            low = mid;
    %%%%%:  538-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  539:        } else if(maximum(square, s) == square) {
    %%%%%:  539-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  539-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  539-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  539-block  3
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
    $$$$$:  539-block  4
call   15 never executed
    $$$$$:  539-block  5
    $$$$$:  539-block  6
call   16 never executed
    $$$$$:  539-block  7
    #####:  540:            high = mid;
    %%%%%:  540-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  541:        }
    #####:  542:        prev = mid;
    %%%%%:  542-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  543:    }
    #####:  544:    ans = mid;
    %%%%%:  544-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  545:    return ans;
    %%%%%:  545-block  0
call    0 never executed
    #####:  546:}
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
    $$$$$:  546-block  0
call    6 never executed
    $$$$$:  546-block  1
call    7 never executed
    $$$$$:  546-block  2
call    8 never executed
    $$$$$:  546-block  3
call    9 never executed
    $$$$$:  546-block  4
call   10 never executed
    $$$$$:  546-block  5
call   11 never executed
        -:  547:
        -:  548:
        -:  549:
function _ZN6bigint4log2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  550:std::string bigint::log2(std::string s) {                 // returns log(s) to base of 2
    #####:  551:    if(s == "0") {
    %%%%%:  551-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  552:        // throw new exception(std::out_of_range("log(0) is undefined"));
    #####:  553:        return std::to_string(std::log2(0));
    %%%%%:  553-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  554:    }
    #####:  555:    if(s[0] == '-') {
    %%%%%:  555-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  555-block  1
branch  3 never executed
branch  4 never executed
        -:  556:        // throw new exception(std::out_of_range("log(negative) is not allowed"));
    #####:  557:        return std::to_string(std::log2(-1));
    %%%%%:  557-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  558:    }
    #####:  559:    std::string logVal = "-1";
    %%%%%:  559-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    $$$$$:  559-block  1
    #####:  560:    while(s != "0") {
    %%%%%:  560-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  561:        logVal = add(logVal, "1");
    %%%%%:  561-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  561-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  561-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  561-block  3
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
    $$$$$:  561-block  4
call   15 never executed
    $$$$$:  561-block  5
    $$$$$:  561-block  6
call   16 never executed
    $$$$$:  561-block  7
    $$$$$:  561-block  8
call   17 never executed
    $$$$$:  561-block  9
    #####:  562:        s = divide(s, "2");
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  562-block  0
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  562-block  1
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  562-block  2
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
    $$$$$:  562-block  3
call   15 never executed
    $$$$$:  562-block  4
    $$$$$:  562-block  5
call   16 never executed
    $$$$$:  562-block  6
    $$$$$:  562-block  7
call   17 never executed
    $$$$$:  562-block  8
        -:  563:    }
    #####:  564:    return logVal;
    %%%%%:  564-block  0
call    0 never executed
    #####:  565:}
call    0 never executed
    $$$$$:  565-block  0
call    1 never executed
        -:  566:
function _ZN6bigint5log10ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  567:std::string bigint::log10(std::string s) {                // returns log(s) to base of 10
    #####:  568:    if(s == "0") {
    %%%%%:  568-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  569:        // throw new exception(std::out_of_range("log(0) is undefined"));
    #####:  570:        return std::to_string(std::log2(0));
    %%%%%:  570-block  0
call    0 never executed
call    1 never executed
        -:  571:    }
    #####:  572:    if(s[0] == '-') {
    %%%%%:  572-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  573:        // throw new exception(std::out_of_range("log(negative) is not allowed"));
    #####:  574:        return std::to_string(std::log2(-1));
    %%%%%:  574-block  0
call    0 never executed
call    1 never executed
        -:  575:    }
    #####:  576:    return std::to_string(s.length() - 1);
    %%%%%:  576-block  0
call    0 never executed
call    1 never executed
        -:  577:}
        -:  578:
function _ZN6bigint11logwithbaseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:  579:std::string bigint::logwithbase(std::string val, std::string base) {
    #####:  580:    return divide(log2(val), log2(base));
    %%%%%:  580-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  580-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  580-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  580-block  3
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  580-block  4
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
    %%%%%:  580-block  5
    $$$$$:  580-block  6
call   17 never executed
    $$$$$:  580-block  7
    $$$$$:  580-block  8
call   18 never executed
    $$$$$:  580-block  9
    $$$$$:  580-block 10
call   19 never executed
    $$$$$:  580-block 11
    $$$$$:  580-block 12
call   20 never executed
        -:  581:}
        -:  582:
function _ZN6bigint8antilog2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  583:std::string bigint::antilog2(std::string s) {
    #####:  584:    return pow("2", s);
    %%%%%:  584-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  584-block  1
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  584-block  2
call    8 never executed
call    9 never executed
call   10 never executed
    %%%%%:  584-block  3
    $$$$$:  584-block  4
call   11 never executed
    $$$$$:  584-block  5
    $$$$$:  584-block  6
call   12 never executed
    $$$$$:  584-block  7
    $$$$$:  584-block  8
call   13 never executed
        -:  585:}
        -:  586:
function _ZN6bigint9antilog10ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  587:std::string bigint::antilog10(std::string s) {
    #####:  588:    return pow("10", s);
    %%%%%:  588-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:  588-block  1
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:  588-block  2
call    8 never executed
call    9 never executed
call   10 never executed
    %%%%%:  588-block  3
    $$$$$:  588-block  4
call   11 never executed
    $$$$$:  588-block  5
    $$$$$:  588-block  6
call   12 never executed
    $$$$$:  588-block  7
    $$$$$:  588-block  8
call   13 never executed
        -:  589:}
        -:  590:
function _ZN6bigint4swapERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ called 0 returned 0% blocks executed 0%
    #####:  591:void bigint::swap(std::string& str1, std::string& str2) {
    #####:  592:    std::string s;
    %%%%%:  592-block  0
call    0 never executed
    #####:  593:    s = str1;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  594:    str1 = str2;
    %%%%%:  594-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  595:    str2 = s;
    %%%%%:  595-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  596:}
    %%%%%:  596-block  0
call    0 never executed
    $$$$$:  596-block  1
call    1 never executed
        -:  597:
function _ZN6bigint7reverseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  598:std::string bigint::reverse(std::string s) {          // reverses the string number, example: "7875" => "5787"
    #####:  599:    bool fl = false;
    #####:  600:    if(s[0] == '-') {
    %%%%%:  600-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  601:        s.erase(0, 1);
    %%%%%:  601-block  0
call    0 never executed
    #####:  602:        fl = true;
        -:  603:    }
    #####:  604:    unsigned long long int beg = 0, end = s.length() - 1;
    %%%%%:  604-block  0
call    0 never executed
        -:  605:    char ch;
    #####:  606:    while(beg < end) {
    %%%%%:  606-block  0
branch  0 never executed
branch  1 never executed
    #####:  607:        ch = s[beg];
    %%%%%:  607-block  0
call    0 never executed
    #####:  608:        s[beg] = s[end];
call    0 never executed
call    1 never executed
    #####:  609:        s[end] = ch;
call    0 never executed
    #####:  610:        beg++;
    #####:  611:        end--;
        -:  612:    }
    #####:  613:    if(fl)
    %%%%%:  613-block  0
branch  0 never executed
branch  1 never executed
    #####:  614:        s = '-' + s;
    %%%%%:  614-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  615:    return s;
    %%%%%:  615-block  0
call    0 never executed
        -:  616:}
        -:  617:
        -:  618:/*
        -:  619:        ______________________________________________________
        -:  620:                        gcd Function
        -:  621:        ______________________________________________________
        -:  622:                      Algorithm Explanation
        -:  623:
        -:  624:        It performs euclid method for finding greates common divisor
        -:  625:
        -:  626:        Algorithmic Time Complexity : O(log(val. of str2)), except mod time complexity
        -:  627:        Algorithmic Space Complexity : O(log(str2)) in stack;
        -:  628:*/
        -:  629:
function _ZN6bigint3gcdENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:  630:std::string bigint::gcd(std::string str1, std::string str2) {
    #####:  631:    if(is_strictlyMaximum(str2, str1))
    %%%%%:  631-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  631-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  631-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  631-block  3
call    9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
    $$$$$:  631-block  4
call   13 never executed
    $$$$$:  631-block  5
    $$$$$:  631-block  6
call   14 never executed
    $$$$$:  631-block  7
    #####:  632:        swap(str1, str2);
    %%%%%:  632-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  633:    std::string temp = "";
    %%%%%:  633-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    $$$$$:  633-block  1
    #####:  634:    while(is_strictlyMaximum(str2, "0")) {
    %%%%%:  634-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  634-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  634-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  634-block  3
call   10 never executed
call   11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
    $$$$$:  634-block  4
call   15 never executed
    $$$$$:  634-block  5
    $$$$$:  634-block  6
call   16 never executed
    $$$$$:  634-block  7
    $$$$$:  634-block  8
call   17 never executed
    $$$$$:  634-block  9
    #####:  635:        temp = mod(str1, str2);
    %%%%%:  635-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  635-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  635-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  635-block  3
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
    $$$$$:  635-block  4
call   13 never executed
    $$$$$:  635-block  5
    $$$$$:  635-block  6
call   14 never executed
    $$$$$:  635-block  7
    #####:  636:        str1 = str2;
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  637:        str2 = temp;
    %%%%%:  637-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  638:    }
    #####:  639:    return str1;
    %%%%%:  639-block  0
call    0 never executed
    %%%%%:  639-block  1
    #####:  640:}
call    0 never executed
    $$$$$:  640-block  0
call    1 never executed
        -:  641:
function _ZN6bigint3lcmENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ called 0 returned 0% blocks executed 0%
    #####:  642:std::string bigint::lcm(std::string str1, std::string str2) {      // return lcm of both str1 and str2
    #####:  643:    return divide(multiply(str1, str2), gcd(str1, str2));
    %%%%%:  643-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  643-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  643-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  643-block  3
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  643-block  4
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:  643-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:  643-block  6
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
    %%%%%:  643-block  7
    $$$$$:  643-block  8
call   25 never executed
    $$$$$:  643-block  9
    $$$$$:  643-block 10
call   26 never executed
    $$$$$:  643-block 11
    $$$$$:  643-block 12
call   27 never executed
    $$$$$:  643-block 13
    $$$$$:  643-block 14
call   28 never executed
    $$$$$:  643-block 15
    $$$$$:  643-block 16
call   29 never executed
    $$$$$:  643-block 17
    $$$$$:  643-block 18
call   30 never executed
        -:  644:}
        -:  645:
function _ZN6bigint4factENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  646:std::string bigint::fact(std::string s) {                     // returns the factorial of string s, numerically
    #####:  647:    if(s[0] == '-') {
    %%%%%:  647-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  647-block  1
branch  3 never executed
branch  4 never executed
    #####:  648:        throw std::runtime_error("Factorial of Negative Integer is not defined.");
    %%%%%:  648-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  648-block  1
call    4 never executed
    $$$$$:  648-block  2
call    5 never executed
        -:  649:    }
    #####:  650:    if(s == "0")
    %%%%%:  650-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  651:        return "1";
    %%%%%:  651-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  651-block  1
call    4 never executed
    $$$$$:  651-block  2
call    5 never executed
    $$$$$:  651-block  3
    #####:  652:    std::string ans = "1";
    %%%%%:  652-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    $$$$$:  652-block  1
    #####:  653:    while(s != "0") {
    %%%%%:  653-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  654:        ans = multiply(ans, s);
    %%%%%:  654-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  654-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  654-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  654-block  3
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
    $$$$$:  654-block  4
call   13 never executed
    $$$$$:  654-block  5
    $$$$$:  654-block  6
call   14 never executed
    $$$$$:  654-block  7
    #####:  655:        s = subtract(s, "1");
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  655-block  0
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  655-block  1
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  655-block  2
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
    $$$$$:  655-block  3
call   15 never executed
    $$$$$:  655-block  4
    $$$$$:  655-block  5
call   16 never executed
    $$$$$:  655-block  6
    $$$$$:  655-block  7
call   17 never executed
    $$$$$:  655-block  8
        -:  656:    }
    #####:  657:    return ans;
    %%%%%:  657-block  0
call    0 never executed
    #####:  658:}
call    0 never executed
    $$$$$:  658-block  0
call    1 never executed
        -:  659:
function _ZN6bigint12isPalindromeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  660:bool bigint::isPalindrome(std::string s) {                  // checks if the Integer as string, s is Palindrome no. or not
    #####:  661:    if(s[0] == '-')
    %%%%%:  661-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  662:        s.erase(0, 1);
    %%%%%:  662-block  0
call    0 never executed
    #####:  663:    unsigned long long int beg = 0, end = s.length() - 1;
    %%%%%:  663-block  0
call    0 never executed
    #####:  664:    while(beg < end) {
    %%%%%:  664-block  0
branch  0 never executed
branch  1 never executed
    #####:  665:        if(s[beg] != s[end])
    %%%%%:  665-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  666:            return false;
    %%%%%:  666-block  0
    #####:  667:        beg++;
    #####:  668:        end--;
    %%%%%:  668-block  0
        -:  669:    }
    #####:  670:    return true;
    %%%%%:  670-block  0
        -:  671:}
        -:  672:
function _ZN6bigint7isPrimeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  673:bool bigint::isPrime(std::string s) {                // checks if the String as Number is prime or not
    #####:  674:    if(maximum(s, "2") != s)
    %%%%%:  674-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:  674-block  1
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  674-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  674-block  3
call   10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
    $$$$$:  674-block  4
call   17 never executed
    $$$$$:  674-block  5
    $$$$$:  674-block  6
call   18 never executed
    $$$$$:  674-block  7
    $$$$$:  674-block  8
call   19 never executed
    $$$$$:  674-block  9
    #####:  675:        return false;
    %%%%%:  675-block  0
    #####:  676:    std::string sqrt = bigint::sqrt(s);
    %%%%%:  676-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  676-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    $$$$$:  676-block  2
    #####:  677:    std::string i = "";
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    $$$$$:  677-block  0
    #####:  678:    for(i = "2"; is_maximum(sqrt, i); i = add(i, "1")) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  678-block  0
    %%%%%:  678-block  1
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:  678-block  2
call    7 never executed
branch  8 never executed
branch  9 never executed
    %%%%%:  678-block  3
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:  678-block  4
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
    %%%%%:  678-block  5
call   18 never executed
branch 19 never executed
branch 20 never executed
    %%%%%:  678-block  6
call   21 never executed
branch 22 never executed
branch 23 never executed
    %%%%%:  678-block  7
call   24 never executed
branch 25 never executed
branch 26 never executed
    %%%%%:  678-block  8
call   27 never executed
call   28 never executed
branch 29 never executed
branch 30 never executed
    $$$$$:  678-block  9
call   31 never executed
    $$$$$:  678-block 10
    $$$$$:  678-block 11
call   32 never executed
    $$$$$:  678-block 12
    $$$$$:  678-block 13
call   33 never executed
    $$$$$:  678-block 14
    $$$$$:  678-block 15
call   34 never executed
    $$$$$:  678-block 16
    $$$$$:  678-block 17
call   35 never executed
    $$$$$:  678-block 18
    #####:  679:        if(mod(s, i) == "0")
    %%%%%:  679-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  679-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  679-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  679-block  3
call    9 never executed
call   10 never executed
call   11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
    $$$$$:  679-block  4
call   15 never executed
    $$$$$:  679-block  5
    $$$$$:  679-block  6
call   16 never executed
    $$$$$:  679-block  7
    #####:  680:            return false;
    %%%%%:  680-block  0
        -:  681:    }
    #####:  682:    return true;
    %%%%%:  682-block  0
    #####:  683:}
    %%%%%:  683-block  0
call    0 never executed
call    1 never executed
    $$$$$:  683-block  1
call    2 never executed
    $$$$$:  683-block  2
call    3 never executed
