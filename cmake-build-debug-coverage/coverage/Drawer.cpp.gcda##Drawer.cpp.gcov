        -:    0:Source:/home/yeawer/tree/Drawer.cpp
        -:    0:Graph:/home/yeawer/tree/cmake-build-debug-coverage/CMakeFiles/tree.dir/Drawer.cpp.gcno
        -:    0:Data:/home/yeawer/tree/cmake-build-debug-coverage/CMakeFiles/tree.dir/Drawer.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "Drawer.h"
        -:    2:#include "FrontEnd.h"
        -:    3:
function _ZN6Drawer4DrawEv called 48102 returned 100% blocks executed 88%
    48102:    4:void Drawer::Draw() noexcept {
    48102:    5:    MAIN_WINDOW::Main_Window_.clear(sf::Color::Black);
    48102:    5-block  0
call    0 returned 48102
    48102:    6:    if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::DD_TREE) { // draw DD
branch  0 taken 35669 (fallthrough)
branch  1 taken 12433
    35669:    7:        Print_DD_TREE();
    35669:    7-block  0
call    0 returned 35669
    12433:    8:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) { // draw AVL
    12433:    8-block  0
branch  0 taken 12433 (fallthrough)
branch  1 taken 0
    12433:    9:        Print_AVL_TREE();
    12433:    9-block  0
call    0 returned 12433
    #####:   10:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::SPLAY_TREE) { // draw SPLAY
    %%%%%:   10-block  0
        -:   11:
        -:   12:    }
    48102:   13:    MAIN_WINDOW::Main_Window_.display();
    48102:   13-block  0
call    0 returned 48102
    48102:   14:}
        -:   15:
  1284643:   16:template<typename vertex_type> void Drawer::DrawVertex(VERTEX<vertex_type>* vertex) noexcept {
  1284643:   17:    CircleShape Output_Circle;
  1284643:   18:    float addX = 0;
  1284643:   19:    float addY = 0;
  1284643:   20:    float zoom = 1.f;
  1284643:   21:    if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::DD_TREE) {
  874354*:   22:        addX = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_x;
  874354*:   23:        addY = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_y;
  874354*:   24:        zoom = MAIN_WINDOW::PRINT_DD_OPTIONS_.zoom;
  410289*:   25:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) {
  410289*:   26:        addX = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_x;
  410289*:   27:        addY = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_y;
  410289*:   28:        zoom = MAIN_WINDOW::PRINT_AVL_OPTIONS.zoom;
    #####:   29:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) {
        -:   30:
        -:   31:    }
  1284643:   32:    Output_Circle.setPosition(Vector2f({vertex->coords.first / zoom + addX / zoom,
  1284643:   33:                                        vertex->coords.second / zoom + addY / zoom}));
  1284643:   34:    Output_Circle.setRadius(vertex->radius / zoom);
  1284643:   35:    Output_Circle.setFillColor(vertex->COLOR);
  1284643:   36:    MAIN_WINDOW::Main_Window_.draw(Output_Circle);
        -:   37:    // Draw Text
  1284643:   38:    if (abs(vertex->val) <= 1000) {
  1284643:   39:        MAIN_WINDOW::User_Text_.setString(std::to_string(vertex->val));
        -:   40:    } else {
    #####:   41:        MAIN_WINDOW::User_Text_.setString("...");
        -:   42:    }
  1284643:   43:    auto text_size = vertex->radius / 1.5;
  1284643:   44:    MAIN_WINDOW::User_Text_.setPosition(Vector2f((vertex->coords.first + addX + text_size) / zoom,
  1284643:   45:                                                 (vertex->coords.second + addY + text_size) / zoom));
  1284643:   46:    MAIN_WINDOW::User_Text_.setFillColor(Color::White);
  1284643:   47:    MAIN_WINDOW::User_Text_.setCharacterSize(text_size / zoom);
  1284643:   48:    MAIN_WINDOW::Main_Window_.draw(MAIN_WINDOW::User_Text_);
  1284643:   49:}
------------------
_ZN6Drawer10DrawVertexI8Node_AVLEEvP6VERTEXIT_E:
function _ZN6Drawer10DrawVertexI8Node_AVLEEvP6VERTEXIT_E called 410289 returned 100% blocks executed 76%
   410289:   16:template<typename vertex_type> void Drawer::DrawVertex(VERTEX<vertex_type>* vertex) noexcept {
   410289:   17:    CircleShape Output_Circle;
   410289:   17-block  0
call    0 returned 410289
   410289:   18:    float addX = 0;
   410289:   19:    float addY = 0;
   410289:   20:    float zoom = 1.f;
   410289:   21:    if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::DD_TREE) {
branch  0 taken 0 (fallthrough)
branch  1 taken 410289
    #####:   22:        addX = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_x;
    #####:   23:        addY = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_y;
    #####:   24:        zoom = MAIN_WINDOW::PRINT_DD_OPTIONS_.zoom;
    %%%%%:   24-block  0
   410289:   25:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) {
   410289:   25-block  0
branch  0 taken 410289 (fallthrough)
branch  1 taken 0
   410289:   26:        addX = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_x;
   410289:   27:        addY = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_y;
   410289:   28:        zoom = MAIN_WINDOW::PRINT_AVL_OPTIONS.zoom;
   410289:   28-block  0
    #####:   29:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) {
    %%%%%:   29-block  0
        -:   30:
        -:   31:    }
   410289:   32:    Output_Circle.setPosition(Vector2f({vertex->coords.first / zoom + addX / zoom,
call    0 returned 410289
   410289:   33:                                        vertex->coords.second / zoom + addY / zoom}));
   410289:   33-block  0
call    0 returned 410289
   410289:   34:    Output_Circle.setRadius(vertex->radius / zoom);
call    0 returned 410289
   410289:   35:    Output_Circle.setFillColor(vertex->COLOR);
call    0 returned 410289
   410289:   36:    MAIN_WINDOW::Main_Window_.draw(Output_Circle);
call    0 returned 410289
        -:   37:    // Draw Text
   410289:   38:    if (abs(vertex->val) <= 1000) {
branch  0 taken 410289 (fallthrough)
branch  1 taken 0
   410289:   39:        MAIN_WINDOW::User_Text_.setString(std::to_string(vertex->val));
   410289:   39-block  0
call    0 returned 410289
call    1 returned 410289
call    2 returned 410289
call    3 returned 410289
call    4 returned 410289
call    5 returned 410289
call    6 returned 410289
        -:   40:    } else {
    #####:   41:        MAIN_WINDOW::User_Text_.setString("...");
    %%%%%:   41-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
        -:   42:    }
   410289:   43:    auto text_size = vertex->radius / 1.5;
   410289:   44:    MAIN_WINDOW::User_Text_.setPosition(Vector2f((vertex->coords.first + addX + text_size) / zoom,
call    0 returned 410289
   410289:   45:                                                 (vertex->coords.second + addY + text_size) / zoom));
   410289:   45-block  0
call    0 returned 410289
   410289:   46:    MAIN_WINDOW::User_Text_.setFillColor(Color::White);
call    0 returned 410289
   410289:   47:    MAIN_WINDOW::User_Text_.setCharacterSize(text_size / zoom);
call    0 returned 410289
   410289:   48:    MAIN_WINDOW::Main_Window_.draw(MAIN_WINDOW::User_Text_);
call    0 returned 410289
   410289:   49:}
call    0 returned 410289
------------------
_ZN6Drawer10DrawVertexI7Node_DDEEvP6VERTEXIT_E:
function _ZN6Drawer10DrawVertexI7Node_DDEEvP6VERTEXIT_E called 874354 returned 100% blocks executed 73%
   874354:   16:template<typename vertex_type> void Drawer::DrawVertex(VERTEX<vertex_type>* vertex) noexcept {
   874354:   17:    CircleShape Output_Circle;
   874354:   17-block  0
call    0 returned 874354
   874354:   18:    float addX = 0;
   874354:   19:    float addY = 0;
   874354:   20:    float zoom = 1.f;
   874354:   21:    if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::DD_TREE) {
branch  0 taken 874354 (fallthrough)
branch  1 taken 0
   874354:   22:        addX = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_x;
   874354:   23:        addY = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_y;
   874354:   24:        zoom = MAIN_WINDOW::PRINT_DD_OPTIONS_.zoom;
   874354:   24-block  0
    #####:   25:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) {
    %%%%%:   25-block  0
branch  0 never executed
branch  1 never executed
    #####:   26:        addX = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_x;
    #####:   27:        addY = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_y;
    #####:   28:        zoom = MAIN_WINDOW::PRINT_AVL_OPTIONS.zoom;
    %%%%%:   28-block  0
    #####:   29:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) {
    %%%%%:   29-block  0
        -:   30:
        -:   31:    }
   874354:   32:    Output_Circle.setPosition(Vector2f({vertex->coords.first / zoom + addX / zoom,
call    0 returned 874354
   874354:   33:                                        vertex->coords.second / zoom + addY / zoom}));
   874354:   33-block  0
call    0 returned 874354
   874354:   34:    Output_Circle.setRadius(vertex->radius / zoom);
call    0 returned 874354
   874354:   35:    Output_Circle.setFillColor(vertex->COLOR);
call    0 returned 874354
   874354:   36:    MAIN_WINDOW::Main_Window_.draw(Output_Circle);
call    0 returned 874354
        -:   37:    // Draw Text
   874354:   38:    if (abs(vertex->val) <= 1000) {
branch  0 taken 874354 (fallthrough)
branch  1 taken 0
   874354:   39:        MAIN_WINDOW::User_Text_.setString(std::to_string(vertex->val));
   874354:   39-block  0
call    0 returned 874354
call    1 returned 874354
call    2 returned 874354
call    3 returned 874354
call    4 returned 874354
call    5 returned 874354
call    6 returned 874354
        -:   40:    } else {
    #####:   41:        MAIN_WINDOW::User_Text_.setString("...");
    %%%%%:   41-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
        -:   42:    }
   874354:   43:    auto text_size = vertex->radius / 1.5;
   874354:   44:    MAIN_WINDOW::User_Text_.setPosition(Vector2f((vertex->coords.first + addX + text_size) / zoom,
call    0 returned 874354
   874354:   45:                                                 (vertex->coords.second + addY + text_size) / zoom));
   874354:   45-block  0
call    0 returned 874354
   874354:   46:    MAIN_WINDOW::User_Text_.setFillColor(Color::White);
call    0 returned 874354
   874354:   47:    MAIN_WINDOW::User_Text_.setCharacterSize(text_size / zoom);
call    0 returned 874354
   874354:   48:    MAIN_WINDOW::Main_Window_.draw(MAIN_WINDOW::User_Text_);
call    0 returned 874354
   874354:   49:}
call    0 returned 874354
------------------
        -:   50:
function _ZN6Drawer8DrawLineERKSt4pairIffES3_RKfN2sf5ColorE called 1238581 returned 100% blocks executed 100%
  1238581:   51:void Drawer::DrawLine(const std::pair<float, float> &first, const std::pair<float, float> &second,
        -:   52:                           const float& RADIUS, sf::Color COLOR) noexcept {
  1238581:   53:    float addX = 0;
  1238581:   54:    float addY = 0;
  1238581:   55:    float zoom = 1.f;
  1238581:   56:    if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::DD_TREE) {
  1238581:   56-block  0
branch  0 taken 840725 (fallthrough)
branch  1 taken 397856
   840725:   57:        addX = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_x;
   840725:   58:        addY = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_y;
   840725:   59:        zoom = MAIN_WINDOW::PRINT_DD_OPTIONS_.zoom;
   840725:   59-block  0
   397856:   60:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) {
   397856:   60-block  0
branch  0 taken 397856 (fallthrough)
branch  1 taken 0
   397856:   61:        addX = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_x;
   397856:   62:        addY = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_y;
   397856:   63:        zoom = MAIN_WINDOW::PRINT_AVL_OPTIONS.zoom;
   397856:   63-block  0
        -:   64:    }
        -:   65:    sf::Vertex line[] = {
  2477162:   66:            sf::Vertex(sf::Vector2f((first.first + addX + RADIUS) / zoom,
  1238581:   67:                                    (first.second + addY + RADIUS) / zoom), COLOR),
  2477162:   68:            sf::Vertex(sf::Vector2f((second.first + addX + RADIUS) / zoom,
  1238581:   69:                                    (second.second + addY + RADIUS) / zoom), COLOR)
  1238581:   70:    };
  1238581:   70-block  0
call    0 returned 1238581
call    1 returned 1238581
call    2 returned 1238581
call    3 returned 1238581
  1238581:   71:    MAIN_WINDOW::Main_Window_.draw(line, 2, sf::Lines);
call    0 returned 1238581
  1238581:   72:}
        -:   73:
        -:   74:template<typename vertex_type>
  2617388:   75:void Drawer::PrintInOrder(VERTEX<vertex_type> *vertex) noexcept {
  2617388:   76:    if (vertex == nullptr) {
  1332745:   77:        return;
        -:   78:    }
  1284643:   79:    if (vertex->left != nullptr) {
   556414:   80:        DrawLine(vertex->coords, vertex->left->coords, vertex->radius);
        -:   81:    }
  1284643:   82:    if (vertex->right != nullptr) {
   682167:   83:        DrawLine(vertex->coords, vertex->right->coords, vertex->radius);
        -:   84:    }
  1284643:   85:    PrintInOrder<vertex_type>(vertex->left);
  1284643:   86:    DrawVertex(vertex);
  1284643:   87:    PrintInOrder<vertex_type>(vertex->right);
        -:   88:}
------------------
_ZN6Drawer12PrintInOrderI8Node_AVLEEvP6VERTEXIT_E:
function _ZN6Drawer12PrintInOrderI8Node_AVLEEvP6VERTEXIT_E called 833011 returned 100% blocks executed 100%
   833011:   75:void Drawer::PrintInOrder(VERTEX<vertex_type> *vertex) noexcept {
   833011:   76:    if (vertex == nullptr) {
   833011:   76-block  0
branch  0 taken 422722 (fallthrough)
branch  1 taken 410289
   422722:   77:        return;
   422722:   77-block  0
        -:   78:    }
   410289:   79:    if (vertex->left != nullptr) {
   410289:   79-block  0
branch  0 taken 186495 (fallthrough)
branch  1 taken 223794
   186495:   80:        DrawLine(vertex->coords, vertex->left->coords, vertex->radius);
   186495:   80-block  0
call    0 returned 186495
        -:   81:    }
   410289:   82:    if (vertex->right != nullptr) {
   410289:   82-block  0
branch  0 taken 211361 (fallthrough)
branch  1 taken 198928
   211361:   83:        DrawLine(vertex->coords, vertex->right->coords, vertex->radius);
   211361:   83-block  0
call    0 returned 211361
        -:   84:    }
   410289:   85:    PrintInOrder<vertex_type>(vertex->left);
   410289:   85-block  0
call    0 returned 410289
   410289:   86:    DrawVertex(vertex);
call    0 returned 410289
   410289:   87:    PrintInOrder<vertex_type>(vertex->right);
call    0 returned 410289
        -:   88:}
------------------
_ZN6Drawer12PrintInOrderI7Node_DDEEvP6VERTEXIT_E:
function _ZN6Drawer12PrintInOrderI7Node_DDEEvP6VERTEXIT_E called 1784377 returned 100% blocks executed 100%
  1784377:   75:void Drawer::PrintInOrder(VERTEX<vertex_type> *vertex) noexcept {
  1784377:   76:    if (vertex == nullptr) {
  1784377:   76-block  0
branch  0 taken 910023 (fallthrough)
branch  1 taken 874354
   910023:   77:        return;
   910023:   77-block  0
        -:   78:    }
   874354:   79:    if (vertex->left != nullptr) {
   874354:   79-block  0
branch  0 taken 369919 (fallthrough)
branch  1 taken 504435
   369919:   80:        DrawLine(vertex->coords, vertex->left->coords, vertex->radius);
   369919:   80-block  0
call    0 returned 369919
        -:   81:    }
   874354:   82:    if (vertex->right != nullptr) {
   874354:   82-block  0
branch  0 taken 470806 (fallthrough)
branch  1 taken 403548
   470806:   83:        DrawLine(vertex->coords, vertex->right->coords, vertex->radius);
   470806:   83-block  0
call    0 returned 470806
        -:   84:    }
   874354:   85:    PrintInOrder<vertex_type>(vertex->left);
   874354:   85-block  0
call    0 returned 874354
   874354:   86:    DrawVertex(vertex);
call    0 returned 874354
   874354:   87:    PrintInOrder<vertex_type>(vertex->right);
call    0 returned 874354
        -:   88:}
------------------
        -:   89:
function _ZN6Drawer13Print_DD_TREEEv called 35669 returned 100% blocks executed 100%
    35669:   90:void Drawer::Print_DD_TREE() noexcept {
    35669:   91:    PrintInOrder<Node_DD>(MAIN_WINDOW::DD_DRAW_TREE_);
    35669:   91-block  0
call    0 returned 35669
    35669:   92:}
        -:   93:
function _ZN6Drawer14Print_AVL_TREEEv called 12433 returned 100% blocks executed 100%
    12433:   94:void Drawer::Print_AVL_TREE() noexcept {
    12433:   95:    PrintInOrder<Node_AVL>(MAIN_WINDOW::AVL_DRAW_TREE_);
    12433:   95-block  0
call    0 returned 12433
    12433:   96:}
        -:   97:
