        -:    0:Source:/home/yeawer/tree/Drawer.cpp
        -:    0:Graph:/home/yeawer/tree/cmake-build-debug-coverage/CMakeFiles/tree.dir/Drawer.cpp.gcno
        -:    0:Data:/home/yeawer/tree/cmake-build-debug-coverage/CMakeFiles/tree.dir/Drawer.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "Drawer.h"
        -:    2:#include "FrontEnd.h"
        -:    3:
function _ZN6Drawer4DrawEv called 24129 returned 100% blocks executed 88%
    24129:    4:void Drawer::Draw() noexcept {
    24129:    5:    MAIN_WINDOW::Main_Window_.clear(sf::Color::Black);
    24129:    5-block  0
call    0 returned 24129
    24129:    6:    if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::DD_TREE) { // draw DD
branch  0 taken 5264 (fallthrough)
branch  1 taken 18865
     5264:    7:        Print_DD_TREE();
     5264:    7-block  0
call    0 returned 5264
    18865:    8:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) { // draw AVL
    18865:    8-block  0
branch  0 taken 18865 (fallthrough)
branch  1 taken 0
    18865:    9:        Print_AVL_TREE();
    18865:    9-block  0
call    0 returned 18865
    #####:   10:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::SPLAY_TREE) { // draw SPLAY
    %%%%%:   10-block  0
        -:   11:
        -:   12:    }
    24129:   13:    MAIN_WINDOW::Main_Window_.display();
    24129:   13-block  0
call    0 returned 24129
    24129:   14:}
        -:   15:
  1194882:   16:template<typename vertex_type> void Drawer::DrawVertex(VERTEX<vertex_type>* vertex) noexcept {
  1194882:   17:    CircleShape Output_Circle;
  1194882:   18:    float addX = 0;
  1194882:   19:    float addY = 0;
  1194882:   20:    float zoom = 1.f;
  1194882:   21:    if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::DD_TREE) {
   62982*:   22:        addX = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_x;
   62982*:   23:        addY = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_y;
   62982*:   24:        zoom = MAIN_WINDOW::PRINT_DD_OPTIONS_.zoom;
 1131900*:   25:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) {
 1131900*:   26:        addX = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_x;
 1131900*:   27:        addY = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_y;
 1131900*:   28:        zoom = MAIN_WINDOW::PRINT_AVL_OPTIONS.zoom;
    #####:   29:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) {
        -:   30:
        -:   31:    }
  1194882:   32:    Output_Circle.setPosition(Vector2f({vertex->coords.first / zoom + addX / zoom,
  1194882:   33:                                        vertex->coords.second / zoom + addY / zoom}));
  1194882:   34:    Output_Circle.setRadius(vertex->radius / zoom);
  1194882:   35:    Output_Circle.setFillColor(vertex->COLOR);
  1194882:   36:    MAIN_WINDOW::Main_Window_.draw(Output_Circle);
        -:   37:    // Draw Text
  1194882:   38:    if (abs(vertex->val) <= 1000) {
  1194882:   39:        MAIN_WINDOW::User_Text_.setString(std::to_string(vertex->val));
        -:   40:    } else {
    #####:   41:        MAIN_WINDOW::User_Text_.setString("...");
        -:   42:    }
  1194882:   43:    auto text_size = vertex->radius / 1.5;
  1194882:   44:    MAIN_WINDOW::User_Text_.setPosition(Vector2f((vertex->coords.first + addX + text_size) / zoom,
  1194882:   45:                                                 (vertex->coords.second + addY + text_size) / zoom));
  1194882:   46:    MAIN_WINDOW::User_Text_.setFillColor(Color::White);
  1194882:   47:    MAIN_WINDOW::User_Text_.setCharacterSize(text_size / zoom);
  1194882:   48:    MAIN_WINDOW::Main_Window_.draw(MAIN_WINDOW::User_Text_);
  1194882:   49:}
------------------
_ZN6Drawer10DrawVertexI8Node_AVLEEvP6VERTEXIT_E:
function _ZN6Drawer10DrawVertexI8Node_AVLEEvP6VERTEXIT_E called 1131900 returned 100% blocks executed 76%
  1131900:   16:template<typename vertex_type> void Drawer::DrawVertex(VERTEX<vertex_type>* vertex) noexcept {
  1131900:   17:    CircleShape Output_Circle;
  1131900:   17-block  0
call    0 returned 1131900
  1131900:   18:    float addX = 0;
  1131900:   19:    float addY = 0;
  1131900:   20:    float zoom = 1.f;
  1131900:   21:    if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::DD_TREE) {
branch  0 taken 0 (fallthrough)
branch  1 taken 1131900
    #####:   22:        addX = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_x;
    #####:   23:        addY = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_y;
    #####:   24:        zoom = MAIN_WINDOW::PRINT_DD_OPTIONS_.zoom;
    %%%%%:   24-block  0
  1131900:   25:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) {
  1131900:   25-block  0
branch  0 taken 1131900 (fallthrough)
branch  1 taken 0
  1131900:   26:        addX = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_x;
  1131900:   27:        addY = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_y;
  1131900:   28:        zoom = MAIN_WINDOW::PRINT_AVL_OPTIONS.zoom;
  1131900:   28-block  0
    #####:   29:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) {
    %%%%%:   29-block  0
        -:   30:
        -:   31:    }
  1131900:   32:    Output_Circle.setPosition(Vector2f({vertex->coords.first / zoom + addX / zoom,
call    0 returned 1131900
  1131900:   33:                                        vertex->coords.second / zoom + addY / zoom}));
  1131900:   33-block  0
call    0 returned 1131900
  1131900:   34:    Output_Circle.setRadius(vertex->radius / zoom);
call    0 returned 1131900
  1131900:   35:    Output_Circle.setFillColor(vertex->COLOR);
call    0 returned 1131900
  1131900:   36:    MAIN_WINDOW::Main_Window_.draw(Output_Circle);
call    0 returned 1131900
        -:   37:    // Draw Text
  1131900:   38:    if (abs(vertex->val) <= 1000) {
branch  0 taken 1131900 (fallthrough)
branch  1 taken 0
  1131900:   39:        MAIN_WINDOW::User_Text_.setString(std::to_string(vertex->val));
  1131900:   39-block  0
call    0 returned 1131900
call    1 returned 1131900
call    2 returned 1131900
call    3 returned 1131900
call    4 returned 1131900
call    5 returned 1131900
call    6 returned 1131900
        -:   40:    } else {
    #####:   41:        MAIN_WINDOW::User_Text_.setString("...");
    %%%%%:   41-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
        -:   42:    }
  1131900:   43:    auto text_size = vertex->radius / 1.5;
  1131900:   44:    MAIN_WINDOW::User_Text_.setPosition(Vector2f((vertex->coords.first + addX + text_size) / zoom,
call    0 returned 1131900
  1131900:   45:                                                 (vertex->coords.second + addY + text_size) / zoom));
  1131900:   45-block  0
call    0 returned 1131900
  1131900:   46:    MAIN_WINDOW::User_Text_.setFillColor(Color::White);
call    0 returned 1131900
  1131900:   47:    MAIN_WINDOW::User_Text_.setCharacterSize(text_size / zoom);
call    0 returned 1131900
  1131900:   48:    MAIN_WINDOW::Main_Window_.draw(MAIN_WINDOW::User_Text_);
call    0 returned 1131900
  1131900:   49:}
call    0 returned 1131900
------------------
_ZN6Drawer10DrawVertexI7Node_DDEEvP6VERTEXIT_E:
function _ZN6Drawer10DrawVertexI7Node_DDEEvP6VERTEXIT_E called 62982 returned 100% blocks executed 73%
    62982:   16:template<typename vertex_type> void Drawer::DrawVertex(VERTEX<vertex_type>* vertex) noexcept {
    62982:   17:    CircleShape Output_Circle;
    62982:   17-block  0
call    0 returned 62982
    62982:   18:    float addX = 0;
    62982:   19:    float addY = 0;
    62982:   20:    float zoom = 1.f;
    62982:   21:    if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::DD_TREE) {
branch  0 taken 62982 (fallthrough)
branch  1 taken 0
    62982:   22:        addX = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_x;
    62982:   23:        addY = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_y;
    62982:   24:        zoom = MAIN_WINDOW::PRINT_DD_OPTIONS_.zoom;
    62982:   24-block  0
    #####:   25:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) {
    %%%%%:   25-block  0
branch  0 never executed
branch  1 never executed
    #####:   26:        addX = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_x;
    #####:   27:        addY = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_y;
    #####:   28:        zoom = MAIN_WINDOW::PRINT_AVL_OPTIONS.zoom;
    %%%%%:   28-block  0
    #####:   29:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) {
    %%%%%:   29-block  0
        -:   30:
        -:   31:    }
    62982:   32:    Output_Circle.setPosition(Vector2f({vertex->coords.first / zoom + addX / zoom,
call    0 returned 62982
    62982:   33:                                        vertex->coords.second / zoom + addY / zoom}));
    62982:   33-block  0
call    0 returned 62982
    62982:   34:    Output_Circle.setRadius(vertex->radius / zoom);
call    0 returned 62982
    62982:   35:    Output_Circle.setFillColor(vertex->COLOR);
call    0 returned 62982
    62982:   36:    MAIN_WINDOW::Main_Window_.draw(Output_Circle);
call    0 returned 62982
        -:   37:    // Draw Text
    62982:   38:    if (abs(vertex->val) <= 1000) {
branch  0 taken 62982 (fallthrough)
branch  1 taken 0
    62982:   39:        MAIN_WINDOW::User_Text_.setString(std::to_string(vertex->val));
    62982:   39-block  0
call    0 returned 62982
call    1 returned 62982
call    2 returned 62982
call    3 returned 62982
call    4 returned 62982
call    5 returned 62982
call    6 returned 62982
        -:   40:    } else {
    #####:   41:        MAIN_WINDOW::User_Text_.setString("...");
    %%%%%:   41-block  0
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
        -:   42:    }
    62982:   43:    auto text_size = vertex->radius / 1.5;
    62982:   44:    MAIN_WINDOW::User_Text_.setPosition(Vector2f((vertex->coords.first + addX + text_size) / zoom,
call    0 returned 62982
    62982:   45:                                                 (vertex->coords.second + addY + text_size) / zoom));
    62982:   45-block  0
call    0 returned 62982
    62982:   46:    MAIN_WINDOW::User_Text_.setFillColor(Color::White);
call    0 returned 62982
    62982:   47:    MAIN_WINDOW::User_Text_.setCharacterSize(text_size / zoom);
call    0 returned 62982
    62982:   48:    MAIN_WINDOW::Main_Window_.draw(MAIN_WINDOW::User_Text_);
call    0 returned 62982
    62982:   49:}
call    0 returned 62982
------------------
        -:   50:
function _ZN6Drawer8DrawLineERKSt4pairIffES3_RKfN2sf5ColorE called 1174253 returned 100% blocks executed 100%
  1174253:   51:void Drawer::DrawLine(const std::pair<float, float> &first, const std::pair<float, float> &second,
        -:   52:                           const float& RADIUS, sf::Color COLOR) noexcept {
  1174253:   53:    float addX = 0;
  1174253:   54:    float addY = 0;
  1174253:   55:    float zoom = 1.f;
  1174253:   56:    if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::DD_TREE) {
  1174253:   56-block  0
branch  0 taken 61218 (fallthrough)
branch  1 taken 1113035
    61218:   57:        addX = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_x;
    61218:   58:        addY = MAIN_WINDOW::PRINT_DD_OPTIONS_.cnt_y;
    61218:   59:        zoom = MAIN_WINDOW::PRINT_DD_OPTIONS_.zoom;
    61218:   59-block  0
  1113035:   60:    } else if (MAIN_WINDOW::type_ == MAIN_WINDOW::which_window_::AVL_TREE) {
  1113035:   60-block  0
branch  0 taken 1113035 (fallthrough)
branch  1 taken 0
  1113035:   61:        addX = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_x;
  1113035:   62:        addY = MAIN_WINDOW::PRINT_AVL_OPTIONS.cnt_y;
  1113035:   63:        zoom = MAIN_WINDOW::PRINT_AVL_OPTIONS.zoom;
  1113035:   63-block  0
        -:   64:    }
        -:   65:    sf::Vertex line[] = {
  2348506:   66:            sf::Vertex(sf::Vector2f((first.first + addX + RADIUS) / zoom,
  1174253:   67:                                    (first.second + addY + RADIUS) / zoom), COLOR),
  2348506:   68:            sf::Vertex(sf::Vector2f((second.first + addX + RADIUS) / zoom,
  1174253:   69:                                    (second.second + addY + RADIUS) / zoom), COLOR)
  1174253:   70:    };
  1174253:   70-block  0
call    0 returned 1174253
call    1 returned 1174253
call    2 returned 1174253
call    3 returned 1174253
  1174253:   71:    MAIN_WINDOW::Main_Window_.draw(line, 2, sf::Lines);
call    0 returned 1174253
  1174253:   72:}
        -:   73:
        -:   74:template<typename vertex_type>
  2413893:   75:void Drawer::PrintInOrder(VERTEX<vertex_type> *vertex) noexcept {
  2413893:   76:    if (vertex == nullptr) {
  1219011:   77:        return;
        -:   78:    }
  1194882:   79:    if (vertex->left != nullptr) {
   561751:   80:        DrawLine(vertex->coords, vertex->left->coords, vertex->radius);
        -:   81:    }
  1194882:   82:    if (vertex->right != nullptr) {
   612502:   83:        DrawLine(vertex->coords, vertex->right->coords, vertex->radius);
        -:   84:    }
  1194882:   85:    PrintInOrder<vertex_type>(vertex->left);
  1194882:   86:    DrawVertex(vertex);
  1194882:   87:    PrintInOrder<vertex_type>(vertex->right);
        -:   88:}
------------------
_ZN6Drawer12PrintInOrderI8Node_AVLEEvP6VERTEXIT_E:
function _ZN6Drawer12PrintInOrderI8Node_AVLEEvP6VERTEXIT_E called 2282665 returned 100% blocks executed 100%
  2282665:   75:void Drawer::PrintInOrder(VERTEX<vertex_type> *vertex) noexcept {
  2282665:   76:    if (vertex == nullptr) {
  2282665:   76-block  0
branch  0 taken 1150765 (fallthrough)
branch  1 taken 1131900
  1150765:   77:        return;
  1150765:   77-block  0
        -:   78:    }
  1131900:   79:    if (vertex->left != nullptr) {
  1131900:   79-block  0
branch  0 taken 528220 (fallthrough)
branch  1 taken 603680
   528220:   80:        DrawLine(vertex->coords, vertex->left->coords, vertex->radius);
   528220:   80-block  0
call    0 returned 528220
        -:   81:    }
  1131900:   82:    if (vertex->right != nullptr) {
  1131900:   82-block  0
branch  0 taken 584815 (fallthrough)
branch  1 taken 547085
   584815:   83:        DrawLine(vertex->coords, vertex->right->coords, vertex->radius);
   584815:   83-block  0
call    0 returned 584815
        -:   84:    }
  1131900:   85:    PrintInOrder<vertex_type>(vertex->left);
  1131900:   85-block  0
call    0 returned 1131900
  1131900:   86:    DrawVertex(vertex);
call    0 returned 1131900
  1131900:   87:    PrintInOrder<vertex_type>(vertex->right);
call    0 returned 1131900
        -:   88:}
------------------
_ZN6Drawer12PrintInOrderI7Node_DDEEvP6VERTEXIT_E:
function _ZN6Drawer12PrintInOrderI7Node_DDEEvP6VERTEXIT_E called 131228 returned 100% blocks executed 100%
   131228:   75:void Drawer::PrintInOrder(VERTEX<vertex_type> *vertex) noexcept {
   131228:   76:    if (vertex == nullptr) {
   131228:   76-block  0
branch  0 taken 68246 (fallthrough)
branch  1 taken 62982
    68246:   77:        return;
    68246:   77-block  0
        -:   78:    }
    62982:   79:    if (vertex->left != nullptr) {
    62982:   79-block  0
branch  0 taken 33531 (fallthrough)
branch  1 taken 29451
    33531:   80:        DrawLine(vertex->coords, vertex->left->coords, vertex->radius);
    33531:   80-block  0
call    0 returned 33531
        -:   81:    }
    62982:   82:    if (vertex->right != nullptr) {
    62982:   82-block  0
branch  0 taken 27687 (fallthrough)
branch  1 taken 35295
    27687:   83:        DrawLine(vertex->coords, vertex->right->coords, vertex->radius);
    27687:   83-block  0
call    0 returned 27687
        -:   84:    }
    62982:   85:    PrintInOrder<vertex_type>(vertex->left);
    62982:   85-block  0
call    0 returned 62982
    62982:   86:    DrawVertex(vertex);
call    0 returned 62982
    62982:   87:    PrintInOrder<vertex_type>(vertex->right);
call    0 returned 62982
        -:   88:}
------------------
        -:   89:
function _ZN6Drawer13Print_DD_TREEEv called 5264 returned 100% blocks executed 100%
     5264:   90:void Drawer::Print_DD_TREE() noexcept {
     5264:   91:    PrintInOrder<Node_DD>(MAIN_WINDOW::DD_DRAW_TREE_);
     5264:   91-block  0
call    0 returned 5264
     5264:   92:}
        -:   93:
function _ZN6Drawer14Print_AVL_TREEEv called 18865 returned 100% blocks executed 100%
    18865:   94:void Drawer::Print_AVL_TREE() noexcept {
    18865:   95:    PrintInOrder<Node_AVL>(MAIN_WINDOW::AVL_DRAW_TREE_);
    18865:   95-block  0
call    0 returned 18865
    18865:   96:}
        -:   97:
